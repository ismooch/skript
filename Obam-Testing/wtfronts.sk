options:
	bandages: paper;&3Bandage;&6Use of this bandage is the only way to fix a long lasting||&6injury brought on by the hazards of the environment.|| ||&5&oRight click with bandage in hand to cure the effects||&5&obrought on by being badly injured. Multiple bandages||&5&omay be required depending on your injury level.
	superbottle: water bottle;&3Super Water Bottle;&6Besides saving you inventory space, this water ||&6is created extra wet to help quench your thirst.|| ||&a+50 Thirst||  ||&5&oUpon use, bottle turns to regular glass bottle.
	unstele: magma cream;&3Unstable Element;&6Highly energized plasma like element found||&6in unstable land and mobs.|| ||&5&oThis goo is really hot!
	unstmetal: gold nugget;&3Unstable Metal Shard;&6Energized metal shards found in unstable land||&6and mobs.|| ||&5&oYou feel a light energetic charge coming from||&5&othe shard.
	unstmetalbar: gold ingot;&3Unstable Metal Bar;&6Crafted from broken &3Unstable Metal Shards&6 to||&6become whole again.|| ||&5&oHot to the touch, this bar gives a highly energetic||&5&ocharge.
	stablemetal: iron ingot;&3Stable Metal Bar;&6Finalized & stable metal bar with just enough||&6energy for crafting special items.|| ||&5&oWarm to the touch with a subtle energetic glow.
	stableele: slimeball;&3Stable Element;&6Stable plasma like element used to enhance other||&6items in special ways.|| ||&5&oThe goo feels nice and warm as it slides through||&5&oyour fingers.
	envradar: compass;&3Environmental Radar;&6A must have tool for always being in the know about||&6the dangerous environment around you.|| ||&c-1 Elemental Fuel per use|| ||&5&oRight click with radar in hand to get the environmental||&5&ostatistics of the land youâ€™re standing on.
	elefuel: coal item;&3Elemental Fuel;&6The universal fuel used to power most of the tools||&6and machines created with &3Energized Metal Bars.
	fairydust: sugar;&3Fairy Dust;&6This mysterious dust is filled with special properties||&6that nobody quite understands. Rumor is the dust||&6when combined with the right items or situations can||&6yield interesting results.
	stable: packed ice;&3Stabilizer;&6The stabilizer contains the perfect elemental makeup||&6to bring unstable energies down to usable levels.|| ||&5&oSurround the Stabilizer in a crafting table with items||&5&othat contain unstable energy.
	stablechst: diamond chestplate;&3Stable Diamond Chestplate;&6This chestplate contains a slot for special||&6enchantments and a container for &3Elemental||&3Fuel&6.
	qnhchest: diamond chestplate;&3Chest of Quench;&6Utilizing the power of &3Elemental Fuel &6and||&6the &3Super Water Bottle&6, this chestplate makes||&6sure you never go thirsty!|| ||&c-1 Elemental Fuel Per Use|| ||&5&oWhile wearing this chestplate, your thirst will||&5&oautomatically go back up to 100 whenever it||&5&odips below 50, as long as you have Elemental||&5&oFuel in your inventory.
	snkchest: diamond chestplate;&3Chest of Snacks;&6Utilizing the power of &3Elemental Fuel &6and an||&6Enchanted Golden Apple, this chestplate makes||&6sure you never go hungry!|| ||&c-1 Elemental Fuel Per Use|| ||&5&oWhile wearing this chestplate, your hunger will||&5&oautomatically go back up to 10 whenever it||&5&odips below 5, as long as you have Elemental||&5&oFuel in your inventory.
	
on script load:
	register new shapeless recipe for named item stack from "{@bandages}" using paper, slimeball, air, air, air, air, air, air, air
	register new shapeless recipe for named item stack from "{@superbottle}" using bottle of water, bottle of water, bottle of water, bottle of water, air, air, air, air, air
	register new shaped recipe for named item stack from "{@unstmetalbar}" using air, air, air, named item stack from "{@unstmetal}", named item stack from "{@unstmetal}", named item stack from "{@unstmetal}", named item stack from "{@unstmetal}", named item stack from "{@unstmetal}", named item stack from "{@unstmetal}"
	register new shaped recipe for named item stack from "{@stablemetal}" using named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}", named item stack from "{@stable}", named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}", named item stack from "{@unstmetalbar}"
	register new shaped recipe for named item stack from "{@stableele}" using named item stack from "{@unstele}", named item stack from "{@unstele}", named item stack from "{@unstele}", named item stack from "{@unstele}", named item stack from "{@stable}", named item stack from "{@unstele}", named item stack from "{@unstele}", named item stack from "{@unstele}", named item stack from "{@unstele}"
	register new shaped recipe for named item stack from "{@stable}" using ice, ice, ice, ice, named item stack from "{@fairydust}", ice, ice, ice, ice
	register new shaped recipe for named item stack from "{@elefuel}" using named item stack from "{@stableele}", named item stack from "{@stableele}", named item stack from "{@stableele}", named item stack from "{@stableele}", coal item, named item stack from "{@stableele}", named item stack from "{@stableele}", named item stack from "{@stableele}", named item stack from "{@stableele}"
	register new shaped recipe for named item stack from "{@envradar}" using named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", compass, named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", named item stack from "{@stablemetal}"
	register new shaped recipe for named item stack from "{@stablechst}" using named item stack from "{@stablemetal}", air, named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", diamond block, named item stack from "{@stablemetal}", named item stack from "{@stablemetal}", named item stack from "{@elefuel}", named item stack from "{@stablemetal}"
	register new shapeless recipe for named item stack from "{@qnhchest}" using named item stack from "{@superbottle}", named item stack from "{@stablechst}", air, air, air, air, air, air, air
	register new shapeless recipe for named item stack from "{@snkchest}" using named item stack from "{@stablechst}", enchanted golden apple, air, air, air, air, air, air, air


on join:
	display board named "&9&lWTF&9ronts" to player
	make score "&3Thirst" in board of player to {thirst.%player%}
	set {board.%player%} to true
	{injured.%player%} is true:
		make score "&cINJURED" in board of player to 1
	move display of player to "sidebar"
			
on chunk load:
	{unstable.%event-chunk%} is not set:
		chance of 2%:
			set {unstable.%event-chunk%} to true
			set {_ran} to random number between 15 and 20
			set {_ran2} to random number between 18 and 20
			set {cavein.%event-chunk%.chance} to {_ran}
			set {methane.%event-chunk%.chance} to {_ran2}
		{unstable.%event-chunk%} is not set:
			set {unstable.%event-chunk%} to false
	{cavein.%event-chunk%.chance} is not set:
		chance of 90%:
			set {_ran} to random integer between 1 and 5
			set {cavein.%event-chunk%.chance} to {_ran}
		{cavein.%event-chunk%.chance} is not set:
			set {cavein.%event-chunk%.chance} to false
	{methane.%event-chunk%.chance} is not set:
		chance of 95%:
			set {_ran} to random integer between 3 and 6
			set {methane.%event-chunk%.chance} to {_ran}
		{methane.%event-chunk%.chance} is not set:
			set {methane.%event-chunk%.chance} to false
		
		
on mine:
	player's tool is pickaxe
	y-coordinate of player is less than 40
	{cavein.%chunk at location of player%.chance} is false:
		set {_run} to false
	{_run} is not set:
		chance of {cavein.%chunk at location of player%.chance}%:
			loop blocks in radius 5:
				{_block.count} is not set:
					set {_block.count} to 0
				add 1 to {_block.count}
				loop-block is air:
					{_air.count} is not set:
						set {_air.count} to 0
					add 1 to {_air.count}
				loop-block is iron block
				set {_max-strut} to true
			{_max-strut} is set:
				chance of {cavein.%chunk at location of player%.chance}%:
					clear {_max-strut}
					loop players in radius 10 of player:
						send "&cYour struts are failing!" to loop-player
					send "&cYour struts are failing!" to player
				
			{_max-strut} is not set:
				send "&3The floor rumbles beneath you.." to player
				loop players in radius 10 of player:
					send "&3The floor rumbles beneath you..." to loop-player
				wait 5 seconds
				send "&cCave In!" to player
				loop players in radius 10 of player:
					send "&cCave In!" to loop-player
				{_air.count} is less than or equal to {_block.count} / 3:
					loop blocks in radius 5:
						loop-block is not bedrock or wood plank or lava or water
						set {_block} to loop-block
						set {_loc} to location of loop-block
						spawn falling block of loop-block at location of loop-block
						delete loop-block
				{_air.count} is greater than {_block.count} / 3:
					loop blocks in radius 10:
						loop-block is not bedrock or wood plank or lava or water
						set {_block} to loop-block
						set {_loc} to location of loop-block
						spawn falling block of loop-block at location of loop-block
						delete loop-block
	{methane.%chunk at location of player%.chance} is false:
		set {_run2} to false
	{_run2} is not set:
		chance of {methane.%chunk at location of player%.chance}%:
			send "&cMethane!" to player
			loop players in radius 10 of player:
				send "&cMethane!" to loop-player
			wait 2 seconds
			create explosion of force 2 at event-location
			chance of {methane.%chunk at location of player%.chance} * 2 %:
				wait 2 seconds
				drop named item stack from "{@unstele}" at event-location
				chance of {methane.%chunk at location of player%.chance} * 2%:
					drop named item stack from "{@unstmetal}" at event-location
		
	chance of {cavein.%chunk at location of player%.chance}%:
		loop blocks in radius 3:
			loop-block is water
			set {_found.water} to true
		{_found.water} is true:
			send "&3Flood!" to player
			loop blocks in radius 3 of event-location:
				loop-block is air:
					set loop-block to water
				

on portal enter:
	{unstable.%chunk at event-location%} is false
	chance of 25%:
		set {unstable.%chunk at event-location%} to true
		set {_ran} to random number between 15 and 20
		set {_ran2} to random number between 18 and 20
		set {cavein.%chunk at event-location%.chance} to {_ran}
		set {methane.%chunk at event-location%.chance} to {_ran2}

			

on right click with compass:
	player's tool is named item stack from "{@envradar}":
		player does not have named item stack from "{@elefuel}":
			send "&cYou do not have enough fuel!" to player
			stop
		remove named item stack from "{@elefuel}" from player
		{cavein.%chunk at location of player%.chance} is not set:
			{unstable.%chunk at location of player%} is not set:
				chance of 2%:
					set {unstable.%chunk at location of player%} to true
					set {_ran} to random number between 15 and 20
					set {_ran2} to random number between 18 and 20
					set {cavein.%chunk at location of player%.chance} to {_ran}
					set {methane.%chunk at location of player%.chance} to {_ran2}
				{unstable.%chunk at location of player%} is not set:
					set {unstable.%chunk at location of player%} to false
			{cavein.%chunk at location of player%.chance} is not set:
				chance of 90%:
					set {_ran} to random integer between 1 and 5
					set {cavein.%chunk at location of player%.chance} to {_ran}
				{cavein.%chunk at location of player%.chance} is not set:
					set {cavein.%chunk at location of player%.chance} to false
			{methane.%chunk at location of player%.chance} is not set:
				chance of 95%:
					set {_ran} to random integer between 3 and 6
					set {methane.%chunk at location of player%.chance} to {_ran}
				{methane.%chunk at location of player%.chance} is not set:
					set {methane.%chunk at location of player%.chance} to false
			
		if {unstable.%chunk at location of player%} is true:
			send "&aGround Structure: &cUnstable"
			send "&aMethane Rating: &cUnstable"
			stop
		if {cavein.%chunk at location of player%.chance} is false:
			send "&aGround Structure: &3SOUND" to player
		else:
			send "&aGround Structure: &e%{cavein.%chunk at location of player%.chance}%" to player
		if {methane.%chunk at location of player%.chance} is false:
			send "&aMethane Rating: &3EMPTY" to player
		else:
			send "&aMethane Rating: &e%{methane.%chunk at location of player%.chance}%" to player

			
command /chunkstats:
	permission: obam.admin
	trigger:
		if {unstable.%chunk at location of player%} is true:
			send "&aGround Structure: &cUnstable"
			send "&aMethane Rating: &cUnstable"
			stop
		if {cavein.%chunk at location of player%.chance} is false:
			send "&aGround Structure: &3SOUND" to player
		else:
			send "&aGround Structure: &e%{cavein.%chunk at location of player%.chance}%" to player
		if {methane.%chunk at location of player%.chance} is false:
			send "&aMethane Rating: &3EMPTY" to player
		else:
			send "&aMethane Rating: &e%{methane.%chunk at location of player%.chance}%" to player			

every 3 seconds:
	loop all players:
		{board.%loop-player%} is not set:
			display board named "&9&lWTF&9ronts" to loop-player
			make score "&3Thirst" in board of loop-player to {thirst.%loop-player%}
			set {board.%loop-player%} to true
			move display of loop-player to "sidebar"
		{board.%loop-player%} is true:
			make score "&3Thirst" in board of loop-player to {thirst.%loop-player%}
		
		block above loop-player is water:
			{thirst.%loop-player%} is less than 100:
				set {_ran} to random number between 1 and 2
				add {_ran} to {thirst.%loop-player%}
				{thirst.%loop-player%} is greater than 100:
					set {thirst.%loop-player%} to 100
		{debug.%loop-player%} is true:
			set {thirst.%loop-player%} to 100
		{thirst.%loop-player%} is not set:
			set {thirst.%loop-player%} to 100
		{thirst.%loop-player%} is less than 0:
			set {thirst.%loop-player%} to 0
		{thirst.%loop-player%} is 0:
			damage loop-player by 1
			send "&cYou are dehydrated" to loop-player
		{thirst.%loop-player%} is greater than 0:
			chance of 30%:
				loop-player is not sprinting:
					set {_ran} to random number between 0 and 1
					set {thirst.%loop-player%} to {thirst.%loop-player%} - {_ran}
				loop-player is sprinting:
					set {_ran} to random number between 1 and 3
					set {thirst.%loop-player%} to {thirst.%loop-player%} - {_ran}
		
		biome at loop-player is desert:
			time in loop-player's world is day
			y-coordinate of loop-player is greater than 60
			{thirst.%loop-player%} is greater than 0:
				set {thirst.%loop-player%} to {thirst.%loop-player%} - 2
			{thirst.%loop-player%} is 0:
				chance of 45%:
					damage loop-player by 2
					send "&cThe sun beats down on you" to loop-player
					
		biome at loop-player is swamp:
			set {_ran} to a random integer between 1 and 5
			{_ran} is 1:
				apply hunger 2 to loop-player for 20 seconds
				send "&cMalaria runs through your body" to loop-player

			
		y-coordinate of loop-player is greater than 110:
			loop-player's helmet is air
			damage loop-player by 1
			send "&cYou are chilled " to loop-player
			apply slowness to loop-player for 3 seconds
		loop-player has lava bucket:
			chance of 10%:
				damage loop-player by 0.5
				send "&cThe lava in your inventory grows hotter" to loop-player
		{injured.%loop-player%} is true:
			chance of 10%:
				set {_location} to location of loop-player
				play 1 of effect "spell" with data 1 at {_location}
				damage loop-player by 0.5
				{injured.%loop-player%.length} is not set:
					set {injured.%loop-player%.length} to 0
				add 1 to {injured.%loop-player%.length}
				send "&cYour injuries need mending!" to loop-player
				{injured.%loop-player%.length} is less than 5:
					apply slowness to loop-player for 999 days
				{injured.%loop-player%.length} is greater than 5:
					{injured.%loop-player%.length} is less than 10:
						apply slowness 2 to loop-player for 999 days
						apply mining fatigue to loop-player for 1 minute
				{injured.%loop-player%.length} is greater than 10:
					apply slowness 3 to loop-player for 999 days
					apply mining fatigue 2 to loop-player for 1 minute
					apply weakness to loop-player for 30 seconds
		{thirst.%loop-player%} is less than or equal to 50:
			name of loop-player's chestplate is "&3Chest of Quench"
			loop-player has named item stack from "{@elefuel}":
				set {thirst.%loop-player%} to 100
				remove named item stack from "{@elefuel}" from loop-player
		loop-player's hunger level is less than 5:
			name of loop-player's chestplate is "&3Chest of Snacks"
			loop-player has named item stack from "{@elefuel}":
				set loop-player's hunger level to 10
				remove named item stack from "{@elefuel}" from loop-player
				
	




	
	loop all entities:
		loop-entity is not player:
			{unstable.%loop-entity%} is set:
				play 100 of effect "reddust" with data 1 at location of loop-entity
					
on spawn of a creeper or a skeleton or a spider or zombie:
	{unstable.%chunk at event-location%} is true:


		set {_loc} to event-location
		event-entity is a creeper:
			set name of event-entity to "&cUnstable Creeper"
			apply resistance 2 to event-entity for 999 days
			apply speed to event-entity for 999 days

			
			set {unstable.%event-entity%} to true

		event-entity is a zombie:

			set name of event-entity to "&cUnstable Zombie"
			apply resistance 2 to event-entity for 999 days
			apply speed 2 to event-entity for 999 days
			equip event-entity with iron sword of sharpness
			set event-entity's helmet to iron helmet
			set {unstable.%event-entity%} to true

		event-entity is skeleton:
			set name of event-entity to "&cUnstable Skeleton"
			apply resistance 2 to event-entity for 999 days
			apply speed 2 to event-entity for 999 days
			equip event-entity with bow
			set event-entity's helmet to gold helmet
			set {unstable.%event-entity%} to true

		event-entity is a spider:
			set name of event-entity to "&cUnstable Spider"
			apply resistance 2 to event-entity for 999 days
			apply speed 2 to event-entity for 999 days
			apply jump 5 to event-entity for 999 days
			set {unstable.%event-entity%} to true

on explosion prime:
	event-entity is creeper:
		{unstable.%event-entity%} is true:
			cancel event
			create an explosion of force 5 at event-location
			set {_loc} to event-location
			play 100 of effect "reddust" with data 1 at {_loc}
			loop players in radius 5 of event-location:
				make event-entity damage loop-player by 4
			
on damage:
	victim is not a player
	{unstable.%victim%} is set:
		damage cause is fall:
			cancel event
		damage cause is block explosion:
			cancel event
				
on death of a creeper or a skeleton or a zombie or a spider:
	chance of 15%:
		add named item stack from "{@bandages}" to drops
	entity's name is "&cUnstable Spawn":
		chance of 10%:
			chance of 2%:
				add named item stack from "{@unstele}" to drops
			add named item stack from "{@unstmetal}" to drops
			
on damage of a player:
	damage cause is fall:
		chance of 15%:
			victim's boots are boots of feather falling:
				stop
			set {_location} to location of victim
			play 1 of effect "angryVillager" of data 1 at {_location}
			set {injured.%victim%} to true
			apply slowness to victim for 999 days
			add 1 to damage
			make score "&cINJURED" in board of victim to 1
			send "&cYou have been injured from your fall!" to victim
			
on right click with paper:
	player is holding named item stack from "{@bandages}":
		{injured.%player%} is not set:
			send "&cYou are not injured!" to player
			stop
		{injured.%player%} is false:
			send "&cYou are not injured!" to player
			stop
		{injured.%player%} is true:
			{injured.%player%.length} is greater than 5:
				{injured.%player%.length} is less than 10:
					remove mining fatigue from player
					remove weakness from player
					remove slowness from player
					apply slowness to player for 999 days
					send "&aYour injuries are healing" to player
					set {injured.%player%.length} to 1
					remove named item stack from "{@bandages}" from player
					stop
			{injured.%player%.length} is greater than 10:
				remove slowness from player
				remove mining fatigue from player
				apply mining fatigue to player for 999 days
				apply slowness 2 to player for 999 days
				remove weakness from player
				set {injured.%player%.length} to 6
				send "&aYour injuries are healing" to player
				remove named item stack from "{@bandages}" from player
				stop
			send "&aYou mend your injuries" to player
			remove mining fatigue from player
			remove weakness from player
			remove slowness from player
			remove named item stack from "{@bandages}" from player
			nullify score "&cINJURED" in board of player
			set {injured.%player%} to false
			set {injured.%player%.length} to 0
			
on bed enter:
	{injured.%player%} is true:
		set {injured.%player%} to false
		set {injured.%player%.length} to 0
		remove mining fatigue from player
		remove weakness from player
		remove slowness from player
		nullify score "&cINJURED" in board of player
		send "&aYou have been healed of your injuries!" to player

on consume of water bottle:
	{thirst.%player%} is greater than or equal to 100:
		set {thirst.%player%} to 100
		cancel event
	player is holding named item stack from "{@superbottle}":
		add 50 to {thirst.%player%}
		{thirst.%player%} is greater than 100:
			set {thirst.%player%} to 100
		stop
	{thirst.%player%} is greater than or equal to 100:
		set {thirst.%player%} to 100
		cancel event
	add 10 to {thirst.%player%}
	{thirst.%player%} is greater than 100:
		set {thirst.%player%} to 100
		
on death of a player:
	{thirst.%player%} is less than 25:
		set {thirst.%player%} to 25
		
command /ci [<number>]:
	permission: obam.admin
	trigger:
		argument is not set:
			send "list"
			send "1  ... Super Water Bottle"
			send "2  ... Bandages"
			send "3  ... Unstable Metal Shard"
			send "4  ... Unstable Metal Bar"
			send "5  ... Stable Metal Bar"
			send "6  ... Unstable Element"
			send "7  ... Stable Element"
			send "8  ... Environmental Radar"
			send "9  ... Elemental Fuel"
			send "10 ... Fairy Dust"
			send "11 ... Stabilizer"
			send "12 ... Stable Chest"
			send "13 ... Chest of Quench"
			send "14 ... Chest of Snacks"
			stop
		argument is 1:
			give named item stack from "{@superbottle}" to player
			
		argument is 2:
			give named item stack from "{@bandages}" to player
			
		argument is 3:
			give named item stack from "{@unstmetal}" to player
			
		argument is 4:
			give named item stack from "{@unstmetalbar}" to player
			
		argument is 5:
			give named item stack from "{@stablemetal}" to player
			
		argument is 6:
			give named item stack from "{@unstele}" to player
			
		argument is 7:
			give named item stack from "{@stableele}" to player
			
		argument is 8:
			give named item stack from "{@envradar}" to player
			
		argument is 9:
			give named item stack from "{@elefuel}" to player
			
		argument is 10:
			give named item stack from "{@fairydust}" to player
			
		argument is 11:
			give named item stack from "{@stable}" to player
			
		argument is 12:
			give named item stack from "{@stablechst}" to player
			
		argument is 13:
			give named item stack from "{@qnhchest}" to player
			
		argument is 14:
			give named item stack from "{@snkchest}" to player
			
		

		
		send "Here is your thing"
			
command /togglestats:
	trigger:

		{board.%player%} is false:
			set {board.%player%} to true
			display board named "&9&lWTF&9fronts" to player
			make score "&3Thirst" in board of player to {thirst.%player%}
			move display of player to "sidebar"
			stop
		{board.%player%} is true:
			set {board.%player%} to false
			display board named " " to player
			stop
		{board.%player%} is not set:
			display board named "&9&lWTF&9ronts" to player
			make score "&3Thirst" in board of player to {thirst.%player%}
			set {board.%player%} to true
			move display of player to "sidebar"
			stop
			


on place:
	former tool's name is set:
		set {information.%block%.1} to former tool
		{debug.%player%} is true:
			send "DEBUG You placed %former tool's name%"
		set {information.%block%.2} to lore of former tool
		set {information.%block%.3} to name of former tool
		{debug.%player%} is true:
			send "DEBUG %block%"
			send "DEBUG %{information.%block%.1}%"
			send "DEBUG %lore of former tool%"
			send "DEBUG %name of former tool%"
			send "DEBUG  %{information.%block%.2}%"
			send "DEBUG %{information.%block%.3}%"
		set {information.%block%.1} to "%{information.%block%.1}%"
		
on break:
	{information.%block%.1} is set:
		cancel event
		{debug.%player%} is true:
			send "DEBUG I ama message"
			set {_message} to "%{information.%block%.1}%;%{information.%block%.3}%;%{information.%block%.2}%"
			send "DEBUG %{_message}%"
		delete block
		drop named item stack from "%{_message}%" at location of block

on break of glowstone:
	chance of 10%:
		player's tool is pickaxe of silk touch:
			stop
		drop named item stack from "{@fairydust}" at location of event-block
	
on right click with sugar:
	player's tool is named item stack from "{@fairydust}":
		player is flying:
			stop
		remove named item stack from "{@fairydust}" from player
		send "&aYou can fly!" to player
		allow player to fly
		wait 5 seconds
		disallow player to fly
		
command /debug:
	permission: obam.admin
	trigger:
		{debug.%player%} is not set:
			set {debug.%player%} to false
		{debug.%player%} is false:
			set {debug.%player%} to true
			send "&aDebug on"
			stop
		{debug.%player%} is true:
			set {debug.%player%} to false
			send "&aDebug off"
			stop
			


		