on death of a player:
	loop drops:
		lore of loop-item contains "&2StickyItem ©":
			name of loop-item contains "&a&b&k&a":
				add loop-item to {soulbound.%uuid of player%::*}
				remove loop-item from drops
		
on respawn:
	wait 1 tick
	{soulbound.%uuid of player%::*} is set:
		loop {soulbound.%uuid of player%::*}:
			player has space for loop-value:
				give player loop-value
				clear {soulbound.%uuid of player%::%loop-index%}
	{soulbound.%uuid of player%::*} exists:
		set {_count} to 0
		loop {soulbound.%uuid of player%::*}:
			add 1 to {_count}
		send "&cYou have &f%{_count}% &cSticky Items that can be claimed using &f/stickyitem claim" to player
		send "&cPlease open up some inventory space." to player

every 1 minute:
	loop all players:
		{soulbound.%uuid of loop-player%::*} exists:
			set {_count} to 0
			loop {soulbound.%uuid of loop-player%::*}:
				add 1 to {_count}
			send "&cYou have &f%{_count}% &cSticky Items that can be claimed using &f/stickyitem claim" to loop-player
			send "&cPlease open up some inventory space." to loop-player

command /stickyitem [<text>]:
	aliases: si
	trigger:
		argument 1 is "help" or "h":
			send "&aSticky Item Help"
			send "&a/stickyitem - will sticky whatever you are holding."
			send "&a/stickyitem claim - will give you any items that were not able to fit in your inventory upon respawn."
			player has permission "obam.smod":
				send "&a/stickyitem mod - will sticky an item without the ticket cost."
		argument 1 is "claim" or "c":
			set {_count1} to 0
			loop {soulbound.%uuid of player%::*}:
				player has space for loop-value:
					give player loop-value
					add 1 to {_count1}
					clear {soulbound.%uuid of player%::%loop-index%}
			{soulbound.%uuid of player%::*} exists:
				set {_count2} to 0
				loop {soulbound.%uuid of player%::*}:
					add 1 to {_count2}
				send "&cYou have claimed &f%{_count1}% &citems from your Sticky Queue. You still have &f%{_count2}% &citems in the Queue."
				stop
			send "&aYou have claimed &f%{_count1}% &aitems from your Sticky Queue. Your Queue is now empty!"
		argument 1 is not set:
			set {_bal} to player's balance
			{_bal} is less than 10000:
				send "&cYou do not have enough tickets for this!"
				stop
			lore of player's tool contains "&2StickyItem ©":
				send "&cThis is already a &2StickyItem ©"
				stop
			name of player's tool is set:
				set name of player's tool to "&a&b&k&a%name of player's tool%"
			name of player's tool is not set:
				set name of player's tool to "&a&b&k&a%type of player's tool%"
			remove 10000 from player's balance
			set lore of player's tool to "%lore of player's tool%|| ||&2StickyItem ©"
			send "&aThank you for using &2StickyItem ©&a. Your item is now Stickied for a price of &e10000 Tickets&a!"
			send "&aYour balance is now &e%player's balance%&a."
		argument 1 is "mod":
			player has permission "obam.admin":
				name of player's tool is set:
					set name of player's tool to "&a&b&k&a%name of player's tool%"
				name of player's tool is not set:
					set name of player's tool to "&a&b&k&a%type of player's tool%"
				lore of player's tool contains "&2StickyItem ©":
					send "&cThis is already a &2StickyItem ©"
					stop
				set lore of player's tool to "%lore of player's tool%|| ||&2StickyItem ©"
				send "&aThank you for using &2StickyItem ©&a."

on enchant:
	lore of event-item contains "&2StickyItem ©":
		send "&cYou can not enchant StickyItems!"
		cancel event
		stop

on craft:
	lore of event-item contains "&2StickyItem ©":
		send "&cYou can not do that with a StickyItem!"
		cancel event
