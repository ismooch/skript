#Kell's Taco Cart Mini Game

#	To Do:
#	legendary quest line
#	Hub signs
#	top players
#	single player
#	zombie taco

#startfold info

#Variables:
#	{taco.variables::*} = controls all item and villager timers
#	{taco.timers.%player%::*} = controls food timers
#	{taco.player.%world%::*} = stores current players 1 & 2
#	{keystone.%world%} = World Keystone
#	{taco.waypoint.%world%::*} = waypoints
#	{taco.p1.spawns.%world%::*} = stores Player 1 customer spawns
#	{taco.p2.spawns.%world%::*} = stores Player 1 customer spawns
#	{taco.villager.name::*} = stores villager names as value, index is random number
#	{taco.receipt1::*} = stores ingredients per type
#	{taco.p1.customer.%world%::*} = stores Player 1 customer names
#	{taco.p2.customer.%world%::*} = stores Player 1 customer names
#	{taco.p1.order.%world%::*} = stores Player 1 customer orders
#	{taco.p2.order.%world%::*} = stores Player 1 customer orders
#	{taco.p1.signs.%world%::*} = stores Player 1 sign locations
#	{taco.p2.signs.%world%::*} = stores Player 2 sign locations
#	{taco.start.%world%::*} = stores Start Sign locations
#	{taco.1.gate1.%world%::*} = stores Player 1 Gate 1 locations
#	{taco.2.gate1.%world%::*} = stores Player 2 Gate 1 locations
#	{taco.1.gate2.%world%::*} = stores Player 1 Gate 2 locations
#	{taco.2.gate2.%world%::*} = stores Player 2 Gate 2 locations
#	farmer = 120
#	priest = 105
#	butcher = 90
#	blacksmith = 75
#	librarian = 60
#	{taco.%player%.score.%world%} = Stores Player score
#	{taco.level::*} = stores dissipating spawn time variables based on player level
#	{taco.timeout::*} = stores customer angry leave messages
#	{taco.correct::*} = stores customer correct turn in messages
#	{taco.incorrect::*} = stores customer incorrect turn in messages
#	{taco.pinky::*} = stores Pinky messages from Cletus
#	{taco.horsey::*} = stores Horse click messages from Cletus

#Related Files:
#	boards.sk = for scoreboard functions
#	keystone.sk = for keystone command
#	legend-sky = legendary quest skript for sky block
#	legend-front = legendary quest skript for Fronts

#endfold

#startfold setup

aliases:
	grain = 296
	soft shell = 148
	hard shell = 147
	whole tomato = 260
	diced tomato = 372
	block of cheese = 19
	shredded cheese = 351:14
	raw onion = 332
	diced onion = 361
	head of lettuce = 351:2
	shredded lettuce = 295
	rancid meat = 367

options:
	receipt1: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt2: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt3: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt4: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Chicken||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	receipt5: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt6: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt7: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt8: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Beef||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	receipt9: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt10: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt11: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt12: paper named "&3Taco Receipt" with lore "&6Soft Shelled Taco||&6+ Fish||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	receipt13: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt14: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt15: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Chicken||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt16: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Chicken||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	receipt17: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt18: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt19: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Beef||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt20: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Beef||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	receipt21: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Lettuce||&6+ Onion"
	receipt22: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Lettuce||&6+ Tomato"
	receipt23: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Fish||&6+ Cheese||&6+ Onion||&6+ Tomato"
	receipt24: paper named "&3Taco Receipt" with lore "&6Hard Shelled Taco||&6+ Fish||&6+ Lettuce||&6+ Onion||&6+ Tomato"
	#clue1:	   give player book from "&9&lSkyblock General Info;&eOBAM Minigames;&fThis book contains Information about||&fSkyblock General Info on OBAM!;§cWhat Is Skyblock?§r §0Skyblock is a survival experience that is based on completing challenges and building a base. You begin on a small floating island in the sky with a chest that contains only the bare minimum to get started.§r||§cGetting Started          §r §0Using the two blocks of ice, you'll want to create an infinite water source. Then, using water and your one lava bucket, create a cobblestone generator and start expanding from there!§r||§cBe Careful!              §r §0Falling off or dying early on with your starter items could result in their loss and require an island reset. You get 2 free resets. After that, it is §r§22,000 Tickets§r §0per reset.§r"
	#clue2:   liabrary  book in its place, give book about Kells and the almight taco god
	#clue3    sign engraved on back with "Please watch over Cletus" from Kells
	clue4: pink wool named "&a&b&k&a&3Silk Lining" with lore "&6This looks like it could be from the||&3fabled &a&b&k&a&3Sombrero of Plenty&3.||&3You should find a black market shop."

#endfold

#startfold recipes

on script load:
	register new shaped recipe for {@receipt1} using shredded cheese, shredded lettuce, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt1} using shredded cheese, diced onion, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt1} using diced onion, shredded cheese, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt1} using diced onion, shredded lettuce, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt1} using shredded lettuce, diced onion, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt1} using shredded lettuce, shredded cheese, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using shredded cheese, shredded lettuce, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using shredded cheese, diced tomato, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using diced tomato, shredded cheese, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using diced tomato, shredded lettuce, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using shredded lettuce, diced tomato, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt2} using shredded lettuce, shredded cheese, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using shredded cheese, diced onion, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using shredded cheese, diced tomato, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using diced tomato, shredded cheese, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using diced tomato, diced onion, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using diced onion, diced tomato, shredded cheese, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt3} using diced onion, shredded cheese, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using shredded lettuce, diced onion, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using shredded lettuce, diced tomato, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using diced tomato, shredded lettuce, diced onion, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using diced tomato, diced onion, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using diced onion, diced tomato, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt4} using diced onion, shredded lettuce, diced tomato, cooked chicken, cooked chicken, cooked chicken, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using shredded cheese, shredded lettuce, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using shredded cheese, diced onion, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using diced onion, shredded cheese, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using diced onion, shredded lettuce, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using shredded lettuce, diced onion, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt5} using shredded lettuce, shredded cheese, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using shredded cheese, shredded lettuce, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using shredded cheese, diced tomato, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using diced tomato, shredded cheese, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using diced tomato, shredded lettuce, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using shredded lettuce, diced tomato, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt6} using shredded lettuce, shredded cheese, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using shredded cheese, diced onion, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using shredded cheese, diced tomato, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using diced tomato, shredded cheese, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using diced tomato, diced onion, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using diced onion, diced tomato, shredded cheese, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt7} using diced onion, shredded cheese, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using shredded lettuce, diced onion, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using shredded lettuce, diced tomato, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using diced tomato, shredded lettuce, diced onion, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using diced tomato, diced onion, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using diced onion, diced tomato, shredded lettuce, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt8} using diced onion, shredded lettuce, diced tomato, cooked beef, cooked beef, cooked beef, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using shredded cheese, shredded lettuce, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using shredded cheese, diced onion, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using diced onion, shredded cheese, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using diced onion, shredded lettuce, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using shredded lettuce, diced onion, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt9} using shredded lettuce, shredded cheese, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using shredded cheese, shredded lettuce, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using shredded cheese, diced tomato, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using diced tomato, shredded cheese, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using diced tomato, shredded lettuce, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using shredded lettuce, diced tomato, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt10} using shredded lettuce, shredded cheese, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using shredded cheese, diced onion, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using shredded cheese, diced tomato, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using diced tomato, shredded cheese, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using diced tomato, diced onion, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using diced onion, diced tomato, shredded cheese, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt11} using diced onion, shredded cheese, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using shredded lettuce, diced onion, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using shredded lettuce, diced tomato, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using diced tomato, shredded lettuce, diced onion, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using diced tomato, diced onion, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using diced onion, diced tomato, shredded lettuce, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt12} using diced onion, shredded lettuce, diced tomato, cooked fish, cooked fish, cooked fish, soft shell, soft shell, soft shell
	register new shaped recipe for {@receipt13} using shredded cheese, shredded lettuce, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt13} using shredded cheese, diced onion, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt13} using diced onion, shredded cheese, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt13} using diced onion, shredded lettuce, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt13} using shredded lettuce, diced onion, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt13} using shredded lettuce, shredded cheese, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using shredded cheese, shredded lettuce, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using shredded cheese, diced tomato, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using diced tomato, shredded cheese, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using diced tomato, shredded lettuce, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using shredded lettuce, diced tomato, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt14} using shredded lettuce, shredded cheese, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using shredded cheese, diced onion, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using shredded cheese, diced tomato, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using diced tomato, shredded cheese, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using diced tomato, diced onion, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using diced onion, diced tomato, shredded cheese, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt15} using diced onion, shredded cheese, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using shredded lettuce, diced onion, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using shredded lettuce, diced tomato, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using diced tomato, shredded lettuce, diced onion, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using diced tomato, diced onion, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using diced onion, diced tomato, shredded lettuce, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt16} using diced onion, shredded lettuce, diced tomato, cooked chicken, cooked chicken, cooked chicken, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using shredded cheese, shredded lettuce, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using shredded cheese, diced onion, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using diced onion, shredded cheese, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using diced onion, shredded lettuce, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using shredded lettuce, diced onion, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt17} using shredded lettuce, shredded cheese, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using shredded cheese, shredded lettuce, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using shredded cheese, diced tomato, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using diced tomato, shredded cheese, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using diced tomato, shredded lettuce, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using shredded lettuce, diced tomato, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt18} using shredded lettuce, shredded cheese, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using shredded cheese, diced onion, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using shredded cheese, diced tomato, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using diced tomato, shredded cheese, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using diced tomato, diced onion, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using diced onion, diced tomato, shredded cheese, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt19} using diced onion, shredded cheese, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using shredded lettuce, diced onion, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using shredded lettuce, diced tomato, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using diced tomato, shredded lettuce, diced onion, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using diced tomato, diced onion, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using diced onion, diced tomato, shredded lettuce, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt20} using diced onion, shredded lettuce, diced tomato, cooked beef, cooked beef, cooked beef, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using shredded cheese, shredded lettuce, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using shredded cheese, diced onion, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using diced onion, shredded cheese, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using diced onion, shredded lettuce, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using shredded lettuce, diced onion, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt21} using shredded lettuce, shredded cheese, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using shredded cheese, shredded lettuce, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using shredded cheese, diced tomato, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using diced tomato, shredded cheese, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using diced tomato, shredded lettuce, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using shredded lettuce, diced tomato, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt22} using shredded lettuce, shredded cheese, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using shredded cheese, diced onion, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using shredded cheese, diced tomato, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using diced tomato, shredded cheese, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using diced tomato, diced onion, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using diced onion, diced tomato, shredded cheese, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt23} using diced onion, shredded cheese, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using shredded lettuce, diced onion, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using shredded lettuce, diced tomato, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using diced tomato, shredded lettuce, diced onion, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using diced tomato, diced onion, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using diced onion, diced tomato, shredded lettuce, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell
	register new shaped recipe for {@receipt24} using diced onion, shredded lettuce, diced tomato, cooked fish, cooked fish, cooked fish, hard shell, hard shell, hard shell

#endfold

#startfold on events

on join:
	set player's level to 0
	set player's level progress to 0
	add 20 to player's hunger

on hunger meter change:
	cancel event

on damage of a player:
	attacker is a witch:
		cancel event
	projectile is a raw onion:
		cancel event
		send "Nice shot!" to attacker
		victim's tool is air:
			set {_vtime} to "%{taco.variables::slow.time}% seconds" parsed as timespan
			apply slowness 8 to victim for {_vtime}
			apply nausea to victim for 999 seconds
			send "&cYou just got knocked out by %attacker%!" to victim
			stop
		delete victim's tool
		apply nausea to victim for 999 seconds
		send "&c%attacker% just knocked the stuff out of your hands!" to victim
		stop
	cancel event

on rightclick on villager:
	cancel event
	player's tool is paper:
		set {_receipt} to player's tool
	{_receipt} is set:
		loop {taco.player.%world%::*}:
			player is loop-value:
				set {_p.num} to loop-index
				exit loop
		{_p.num} is set:
			set {_loc} to location of block below villager
			loop {taco.p%{_p.num}%.spawns.%world%::*}:
				{_loc} is loop-value:
					set {_c.num} to loop-index
					exit loop
			{_c.num} is set:
				set {_match} to false
				{_receipt} is {taco.%{taco.p%{_p.num}%.order.%world%::%{_c.num}%}%::6}:
					set {_match} to true
					increase the level progress of player by 0.05
					add 1 to {taco.%{taco.player.%world%::%{_p.num}%}%.score.%world%}
					set {_ran} to random integer between 1 and 5
					send "&9%{taco.p%{_p.num}%.customer.%world%::%{_c.num}%}%:&f %{taco.correct::%{_ran}%}%" to {taco.player.%world%::%{_p.num}%}
					clear {taco.p1.order.%world%::%{_slot}%}
					remove player's tool from player
					delete villager
				{_match} is false:
					set {_ran} to random integer between 1 and 6
					send "&9%{taco.p%{_p.num}%.customer.%world%::%{_c.num}%}%:&f %{taco.correct::%{_ran}%}%" to {taco.player.%world%::%{_p.num}%}
					remove player's tool from player
					delete villager

on damage of villager:
	cancel event
	projectile is a raw onion:
		send "Nailed them!" to attacker
		set {_loc} to location of block below victim
		loop {taco.p1.spawns.%world%::*}:
			{_loc} is loop-value:
				set {_p.num} to 1
				set {_c.num} to loop-index
				exit loop
		loop {taco.p2.spawns.%world%::*}:
			{_loc} is loop-value:
				set {_p.num} to 2
				set {_c.num} to loop-index
				exit loop
		{_p.num} is set:
			{_c.num} is set:
				set {_vtime} to "%{taco.variables::villager_hit.time}% seconds" parsed as timespan
				subtract {_vtime} from {taco.p%{_p.num}%.customer.timer.%world%::%{_c.num}%}
				set {_ran} to random integer between 1 and 5
				send "&9%{taco.p%{_p.num}%.customer.%world%::%{_c.num}%}%:&f %{taco.villager_hit::%{_ran}%}%" to {taco.player.%world%::*}

on damage of sheep:
	cancel event

on sheep eat:
	cancel event

on sheep dye:
	cancel event
	message "Nope 2"

on vehicle enter:
	cancel event

on right click on horse:
	cancel event
	set {_ran} to random integer between 1 and 5
	message "&9Cletus:&f %{taco.horsey::%{_ran}%}%"

on right click on donkey:
	cancel event
	message "&9Cletus:&f That'll do Donkey, that'll do."

on place:
	player is not op
	cancel event
	
on break:
	player is not op
	cancel event

on pickup:
	item is rancid meat:
		cancel event

on xp spawn:
	cancel event
			
on drop:
	item is not rancid meat:
		cancel event

on rightclick on item frame:
	cancel event

on damage of item frame:
	cancel event
		
on damage of a silverfish:
	kill victim
		
on target:
	creature is a witch:
		target is a player:
			cancel event

on rightclick on a stone button:
	cancel event
	player has grain:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::soft_shell}:
			remove 1 grain from player
			give player {taco.variables::soft_shell.amount} of soft shell named "Soft Taco Shell"
			set {taco.timers.%player%::soft_shell} to now
			set {_vtime} to "%{taco.variables::soft_shell.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::soft_shell}
			stop
		message "&cYou must wait a little longer to use the &6Soft Shell Press&c!"
		stop
	message "&cYou need some &6Grain&c to use this equipment!"		

on rightclick on a hopper:
	cancel event
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::grain}:
		give player {taco.variables::grain.amount} of grain named "Grain"
		set {taco.timers.%player%::grain} to now
		set {_vtime} to "%{taco.variables::grain.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::grain}
		stop
	message "&cYou must wait a little longer to use the &6Grain Dispenser&c!"

on rightclick on a wooden button:
	cancel event
	player has grain:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::hard_shell}:
			remove 1 grain from player
			give player {taco.variables::hard_shell.amount} of hard shell named "Hard Taco Shell"
			set {taco.timers.%player%::hard_shell} to now
			set {_vtime} to "%{taco.variables::hard_shell.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::hard_shell}
			stop
		message "&cYou must wait a little longer to use the &6Hard Shell Press&c!"
		stop
	message "&cYou need some &6Grain&c to use this equipment!"

on rightclick on daylight sensor:
	player has whole tomato:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::diced_tomato}:
			remove 1 whole tomato from player
			give player {taco.variables::diced_tomato.amount} of diced tomato named "Diced Tomato"
			set {taco.timers.%player%::diced_tomato} to now
			set {_vtime} to "%{taco.variables::diced_tomato.time}% seconds" parsed as timespan
			add {_vtime}  to {taco.timers.%player%::diced_tomato}
			stop
		message "&cYou must wait a little longer to use the &6Tomato Dicer&c!"
		stop
	message "&cYou need a &6Whole Tomato&c to use this equipment!"

on rightclick on a chest:
	cancel event
	"%player's world%" is "tacohub":
		stop
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::block_of_cheese}:
		give player {taco.variables::block_of_cheese.amount} of block of cheese named "Block of Cheese"
		set {taco.timers.%player%::block_of_cheese} to now
		set {_vtime} to "%{taco.variables::block_of_cheese.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::block_of_cheese}
		stop
	message "&cYou must wait a little longer to open the &6Cheese Cooler&c!"

on rightclick on an oxeye daisy:
	cancel event
	"%player's world%" is "tacohub":
		{taco.timers.%player%::raw_onion} is not set:
			set {taco.timers.%player%::raw_onion} to now
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::raw_onion}:
		give player {taco.variables::raw_onion.amount} of raw onion named "Raw Onion"
		set {taco.timers.%player%::raw_onion} to now
		set {_vtime} to "%{taco.variables::raw_onion.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::raw_onion}
		stop
	message "&cYou must wait a little longer to harvest from the &6Onion Garden&c!"

on rightclick on a dispenser:
	cancel event
	player has raw beef:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::steak}:
			remove 1 raw beef from player
			give player {taco.variables::steak.amount} of steak named "Spicy Beef"
			set {taco.timers.%player%::steak} to now
			set {_vtime} to "%{taco.variables::steak.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::steak}
			clear {taco.timers.%player%::rancid_meat}
			stop
		message "&cYou must wait a little longer to use the &6Steak-a-nator 5000&c!"
		stop
	message "&cYou need some &6Raw Beef&c to use this equipment!"

on rightclick on a furnace:
	cancel event
	player has raw fish:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::cooked_fish}:
			remove 1 raw fish from player
			give player {taco.variables::cooked_fish.amount} of cooked fish named "Fish Sticks"
			set {taco.timers.%player%::cooked_fish} to now
			set {_vtime} to "%{taco.variables::cooked_fish.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::cooked_fish}
			clear {taco.timers.%player%::rancid_fish}
			stop
		message "&cYou must wait a little longer to use the &6Fish-O-Matic&c!"
		stop
	message "&cYou need some &6Raw Fish&c to use this equipment!"

on rightclick on a dropper:
	cancel event
	player has raw chicken:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::cooked_chicken}:
			remove 1 raw chicken from player
			give player {taco.variables::cooked_chicken.amount} of cooked chicken named "Spicy Chicken"
			set {taco.timers.%player%::cooked_chicken} to now
			set {_vtime} to "%{taco.variables::cooked_chicken.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::cooked_chicken}
			clear {taco.timers.%player%::rancid_chicken}
			stop
		message "&cYou must wait a little longer to use the &6Clucker-Cooker&c!"
		stop
	message "&cYou need some &6Raw Chicken&c to use this equipment!"

on rightclick on a lever:
	cancel event
	player has head of lettuce:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::shredded_lettuce}:
			remove 1 head of lettuce from player
			give player {taco.variables::shredded_lettuce.amount} of shredded lettuce named "Shredded Lettuce"
			set {taco.timers.%player%::shredded lettuce} to now
			set {_vtime} to "%{taco.variables::shredded_lettuce.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::shredded_lettuce}
			stop
		message "&cYou must wait a little longer to use the &6Lettuce Shredder&c!"
		stop
	message "&cYou need a &6Head of Lettuce&c to use this equipment!"

on rightclick on a tripwire hook:
	cancel event
	player has raw onion:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::diced_onion}:
			remove 1 raw onion from player
			give player {taco.variables::diced_onion.amount} of diced onion named "Diced Onion"
			set {taco.timers.%player%::diced_onion} to now
			set {_vtime} to "%{taco.variables::diced_onion.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::diced_onion}
			stop
		message "&cYou must wait a little longer to use the &6Onion Chopper&c!"
		stop
	message "&cYou need a &6Raw Onion&c to use this equipment!"

on rightclick on an iron door:
	cancel event
	"%player's world%" is "tacohub":
		stop
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::raw_chicken}:
		give player {taco.variables::raw_chicken.amount} of raw chicken named "Raw Chicken"
		set {taco.timers.%player%::raw_chicken} to now
		set {_vtime} to "%{taco.variables::raw_chicken.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::raw_chicken}
		set {taco.timers.%player%::rancid_chicken} to now
		stop
	message "&cYou must wait a little longer to open the &6Chicken Freezer&c!"

on rightclick on a wooden door:
	cancel event
	"%player's world%" is "tacohub":
		stop
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::raw_beef}:
		give player {taco.variables::raw_beef.amount} of raw beef named "Raw Beef"
		set {taco.timers.%player%::raw_beef} to now
		set {_vtime} to "%{taco.variables::raw_beef.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::raw_beef}
		set {taco.timers.%player%::rancid_meat} to now
		stop
	message "&cYou must wait a little longer to open the &6Beef Freezer&c!"
	
on rightclick on ice:
	cancel event
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::raw_fish}:
		give player {taco.variables::raw_fish.amount} of raw fish named "Raw Fish"
		set {taco.timers.%player%::raw_fish} to now
		set {_vtime} to "%{taco.variables::raw_fish.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::raw_fish}
		set {taco.timers.%player%::rancid_fish} to now
		stop
	message "&cYou must wait a little longer to get in the &6Fish Freezer&c!"

on rightclick on mob head block:1:
	cancel event
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::head_of_lettuce}:
		give player {taco.variables::head_of_lettuce.amount} of head of lettuce named "Head of Lettuce"
		set {taco.timers.%player%::head_of_lettuce} to now
		set {_vtime} to "%{taco.variables::head_of_lettuce.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::head_of_lettuce}
		stop
	message "&cYou must wait a little longer to pick from the &6Lettuce Garden&c!"

on rightclick on a jukebox:
	cancel event
	player has block of cheese:
		set {_dc} to now
		{_dc} is greater than or equal to {taco.timers.%player%::shredded_cheese}:
			remove 1 block of cheese from player
			give player {taco.variables::shredded_cheese.amount} of shredded cheese named "Shredded Cheese"
			set {taco.timers.%player%::shredded_cheese} to now
			set {_vtime} to "%{taco.variables::shredded_cheese.time}% seconds" parsed as timespan
			add {_vtime} to {taco.timers.%player%::shredded_cheese}
			stop
		message "&cYou must wait a little longer to use the &6Cheese Shredder&c!"
		stop
	message "&cYou need a &6Block of Cheese&c to use this equipment!"

on rightclick on an ender chest:
	cancel event
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::whole_tomato}:
		give player {taco.variables::whole_tomato.amount} of whole tomato named "Whole Tomato"
		set {taco.timers.%player%::whole_tomato} to now
		set {_vtime} to "%{taco.variables::whole_tomato.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::whole_tomato}
		stop
	message "&cYou must wait a little longer to get in the &6Tomato Bin&c!"
		
on rightclick on a sheep:
	cancel event
	set {_dc} to now
	{_dc} is greater than or equal to {taco.timers.%player%::sheep}:
		chance of 2%:
			{legendary.progress.%player%::3} is true:
				message "&6Hmmmm, could this be?"
				give player {@clue4}
				set {legendary.progress.%player%::4} to true
				set {taco.timers.%player%::sheep} to now
		set {_vtime} to "%{taco.variables::sheep.time}% seconds" parsed as timespan
		add {_vtime} to {taco.timers.%player%::sheep}
		stop

on rightclick on a cauldron:
	cancel event
	player has nausea:
		remove nausea from player
		remove slowness from player
		message "You are healed child!"

on right click on sign:
	line 1 of block is "Click here":
		set {_count} to 0
		loop entities in radius 3 of block:
			loop-entity is a player:
				add loop-entity to {_who::*}
				add 1 to {_count}
				{_count} is greater than 1:
					send "Only one player per side." to {_who::*}
					stop
		{_count} is 1:
			set {_loc} to location of block
			loop {taco.start.%world%::*}:
				loop-value is {_loc}:
					set {_slot} to loop-index
					set {taco.readycheck.%world%::%{_slot}%} to player
					set line 1 of block to "Now waiting on"
					set line 2 of block to "your opponent"
					set line 3 of block to "to click their"
					set line 4 of block to "Ready Sign"
					loop {taco.%{_slot}%.gate2.%world%::*}:
						set {_change} to loop-value-2
						{_slot} is "1":
							set block 2 meters above {_change} to nether fence
						{_slot} is "2":
							set block 2 meters above {_change} to fence
					stop
	line 1 of block is "Now waiting on":
		set {_loc} to location of block
		loop {taco.start.%world%::*}:
			loop-value is {_loc}:
				set {_slot} to loop-index
				clear {taco.readycheck.%world%::%{_slot}%}
				set line 1 of block to "Click here"
				set line 2 of block to "to claim the"
				{_slot} is "1":
					set line 3 of block to "Nether"
				{_slot} is "2":
					set line 3 of block to "Wooden"
				set line 4 of block to "Taco Shack"
				loop {taco.%{_slot}%.gate2.%world%::*}:
					set {_change} to loop-value-2
					set block 2 meters above {_change} to air


#endfold

#startfold periodic

#WORLD SPECIFIC
every 60 seconds:
	loop all entities in world "tacohub":
		set {_ran} to random integer between 1 and 5
		loop-entity is a villager:
			loop players in radius 25 of loop-entity:
				send "&9Cletus:&f %{taco.pinky::%{_ran}%}%" to loop-player

#Order Signs
every 1 second:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is true:
			loop {taco.player.%{_world}%::*}:
				set {_p.num} to loop-index-2
				loop {taco.p%{_p.num}%.signs.%{_world}%::*}:
					set {_next} to false
					set {_sign} to block at location of loop-value-3
					set {_slot} to loop-index-3
					set {_timecheck} to now
					set {_ttm} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
					subtract 20 seconds from {_ttm}
					set {_ing1} to {taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::1}
					set {_ing2} to {taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::2}
					set {_ing3} to {taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::3}
					set {_ing4} to {taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::4}
					set {_ing5} to {taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::5}
					{_timecheck} is greater than {_ttm}:
						set line 1 of {_sign} to "&4%{_ing1}%  %{_ing2}%"
						set line 2 of {_sign} to "&4%{_ing3}%"
						set line 3 of {_sign} to "&4%{_ing4}%"
						set line 4 of {_sign} to "&4%{_ing5}%"
						set {_next} to true
					{_timecheck} is greater than {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}:
						set line 1 of {_sign} to "&4----------"
						set line 2 of {_sign} to "&4----------"
						set line 3 of {_sign} to "&4----------"
						set line 4 of {_sign} to "&4----------"
						set {_next} to true
					{_next} is false:
						set line 1 of {_sign} to "%{_ing1}%  %{_ing2}%"
						set line 2 of {_sign} to "%{_ing3}%"
						set line 3 of {_sign} to "%{_ing4}%"
						set line 4 of {_sign} to "%{_ing5}%"

#Customer Despawn
every 1 second:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is true:
			loop {taco.player.%{_world}%::*}:
				set {_p.num} to loop-index-2
				loop {taco.p%{_p.num}%.customer.timer.%{_world}%::*}:
					set {_ran} to random integer between 1 and 10
					set {_slot} to loop-index-3
					set {_timecheck} to now
					{_timecheck} is greater than {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}:
						loop entities in radius 2 around block at {taco.p%{_p.num}%.spawns.%{_world}%::%{_slot}%}:
							loop-entity is a villager:
								send "&9%{taco.p%{_p.num}%.customer.%{_world}%::%{_slot}%}%:&f %{taco.timeout::%{_ran}%}%" to {taco.player.%{_world}%::%{_p.num}%}
								delete loop-entity

#Scoreboards
every 1 second:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		loop {taco.player.%{_world}%::*}:
			set {_player} to loop-value-2
			{taco.game.status.%{_world}%} is true:
				{toggle.sb.%{_player}%} is not set:
					set {toggle.sb.%{_player}%} to true
				{toggle.sb.%{_player}%} is false:
					set {toggle.sb.%{_player}%} to true
				{toggle.sb.%{_player}%} is true:
					{board.up.%{_player}%.tc} is not set:
						set {board.up.%{_player}%.tc} to false
					{board.up.%{_player}%.tc} is true:
						{taco.player.%{_world}%::1} is "%{_player}%":
							make score "&aYou:" in board of {_player} to {taco.%{_player}%.score.%{_world}%}
							make score "&cThem:" in board of {_player} to {taco.%{taco.player.%{_world}%::2}%.score.%{_world}%}
						{taco.player.%{_world}%::2} is "%{_player}%":
							make score "&aYou:" in board of {_player} to {taco.%{_player}%.score.%{_world}%}
							make score "&cThem:" in board of {_player} to {taco.%{taco.player.%{_world}%::1}%.score.%{_world}%}
					{board.up.%{_player}%.tc} is false:
						{taco.player.%{_world}%::1} is "%{_player}%":
							display board named "&9&lTaco Cart" to {_player}
							make score "&aYou:" in board of {_player} to {taco.%{_player}%.score.%{_world}%}
							make score "&cThem:" in board of {_player} to {taco.%{taco.player.%{_world}%::2}%.score.%{_world}%}
							move display of {_player} to sidebar
						{taco.player.%{_world}%::2} is "%{_player}%":
							display board named "&9&lTaco Cart" to {_player}
							make score "&aYou:" in board of {_player} to {taco.%{_player}%.score.%{_world}%}
							make score "&cThem:" in board of {_player} to {taco.%{taco.player.%{_world}%::1}%.score.%{_world}%}
							move display of {_player} to sidebar
			{taco.game.status.%{_world}%} is false:
				display board named "" to {_player}
				move display of {_player} to sidebar

#End Game
every 1 second:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		set {_tc} to now
		{taco.game.status.%{_world}%} is true:
			{_tc} is greater than {taco.game.timer.%{_world}%}:
				clear {_p1}
				clear {_p2}
				set {taco.game.status.%{_world}%} to false
				send "Times up!" to {taco.player.%{_world}%::*}
				set {_p1} to {taco.player.%{_world}%::1}
				set {_p2} to {taco.player.%{_world}%::2}
				set {_p1score} to {taco.%{_p1}%.score.%{_world}%}
				set {_p2score} to {taco.%{_p2}%.score.%{_world}%}
				{_p1score} is greater than {_p2score}:
					set {_winner} to 3 * {_p1score}
					add {_winner} to {_p1}'s balance
					send "&aYou have won &e%{_winner}% Tickets&a!" to {_p1}
					send "&aYou now have &e%{_p1}'s balance%" to {_p1}
					log "%{_p1}%^ADD^%{_winner}%^%{_p1}'s balance%^Winner Prize" to "tickets/tacocart.log"
					add {_p2score} to {_p2}'s balance
					send "&aYou have won &e%{_p2score}% Tickets&a!" to {_p2}
					send "&aYou now have &e%{_p2}'s balance%" to {_p2}
					log "%{_p2}%^ADD^%{_p2score}%^%{_p2}'s balance%^Loser Prize" to "tickets/tacocart.log"
				{_p2score} is greater than {_p1score}:
					set {_winner} to 3 * {_p2score}
					add {_winner} to {_p2}'s balance
					send "&aYou have won &e%{_winner}% Tickets&a!" to {_p2}
					send "&aYou now have &e%{_p2}'s balance%" to {_p2}
					log "%{_p2}%^ADD^%{_winner}%^%{_p2}'s balance%^Winner Prize" to "tickets/tacocart.log"
					add {_p1score} to {_p1}'s balance
					send "&aYou have won &e%{_p1score}% Tickets&a!" to {_p1}
					send "&aYou now have &e%{_p1}'s balance%" to {_p1}
					log "%{_p1}%^ADD^%{_p1score}%^%{_p1}'s balance%^Loser Prize" to "tickets/tacocart.log"
				{_p1score} is equal to {_p2score}:
					set {_winner} to 2 * {_p1score}
					add {_winner} to {_p1}'s balance
					send "&aYou have won &e%{_winner}% Tickets&a!" to {_p1}
					send "&aYou now have &e%{_p1}'s balance%" to {_p1}
					log "%{_p1}%^ADD^%{_winner}%^%{_p1}'s balance%^Tie Prize" to "tickets/tacocart.log"
					set {_winner} to 2 * {_p2score}
					add {_winner} to {_p2}'s balance
					send "&aYou have won &e%{_winner}% Tickets&a!" to {_p2}
					send "&aYou now have &e%{_p2}'s balance%" to {_p2}
					log "%{_p2}%^ADD^%{_winner}%^%{_p2}'s balance%^Tie Prize" to "tickets/tacocart.log"
				loop {taco.1.gate1.%{_world}%::*}:
					set {_change} to loop-value-2
					set block 2 meters above {_change} to nether fence
				loop {taco.2.gate1.%{_world}%::*}:
					set {_change} to loop-value-2
					set block 2 meters above {_change} to fence
				loop {taco.player.%{_world}%::*}:
					set {board.up.%loop-value-2%.tc} to false
					display board named "" to loop-value-2
				clear {taco.p1.customer.timer.%{_world}%::*}
				clear {taco.p2.customer.timer.%{_world}%::*}
				clear {taco.p1.customer.%{_world}%::*}
				clear {taco.p2.customer.%{_world}%::*}
				set {taco.%{taco.player.%{_world}%::1}%.score.%{_world}%} to 0
				set {taco.%{taco.player.%{_world}%::2}%.score.%{_world}%} to 0
				clear {taco.player.%{_world}%::*}
				loop all entities in {_p1}'s world:
					loop-entity is a dropped item:
						delete loop-entity
					loop-entity is a villager:
						delete loop-entity
					loop-entity is a sheep:
						delete loop-entity
				clear inventory of {_p1}
				clear {taco.timers.%{_p1}%::*}
				set {taco.timers.%{_p1}%::raw_onion} to now
				clear inventory of {_p2}
				clear {taco.timers.%{_p2}%::*}
				set {taco.timers.%{_p2}%::raw_onion} to now
				set {_p1}'s level to 0
				set {_p1}'s level progress to 0
				set {_p2}'s level to 0
				set {_p2}'s level progress to 0
				loop {taco.start.%{_world}%::*}:
					set {_loc} to loop-value-2
					set {_slot} to loop-index-2
					set {_block} to block at {_loc}
					set line 1 of {_block} to "Click here"
					set line 2 of {_block} to "to claim the"
					{_slot} is "1":
						set line 3 of {_block} to "Nether"
					{_slot} is "2":
						set line 3 of {_block} to "Wooden"
					set line 4 of {_block} to "Taco Shack"
					loop {taco.%{_slot}%.gate2.%{_world}%::*}:
						set {_change} to loop-value-3
						set block 2 meters above {_change} to air
				send "&cTeleporting in &E5&c seconds" to {_p1}
				send "&cTeleporting in &E5&c seconds" to {_p2}
				wait 5 seconds
				send "&cNow Teleporting" to {_p1}
				send "&cNow Teleporting" to {_p2}
				wait 0.3 seconds
				teleport {_p1} to {spawn.taco}
				teleport {_p2} to {spawn.taco}

#BOH
every 5 seconds:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is true:
			loop {taco.player.%{_world}%::*}:
				set {_p.num} to loop-index-2
				loop all entities in radius 10 around block at {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
					loop-entity is a silverfish:
						add 1 to {_silver}
					loop-entity is player:
						add loop-entity to {_players::*}
				{_silver} is greater than 20:
					loop all entities in radius 10 around block at {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
						loop-entity is a silverfish:
							delete loop-entity
						loop-entity is rancid meat:
							delete loop-entity
					spawn witch 3 meters above location of {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}
					set name of spawned witch to "&cBoard of Health"
					set the walk speed of the spawned witch to 0.1
					message "&cBoard of Health:&f Health inspection, mind if I have a look around?" to {_players::*}
					loop all blocks in radius 10 of {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
						loop-block is daylight sensor:
							set {_go} to location 2 meter above loop-block
							make spawned witch home towards {_go}
							exit loop
					wait 2 seconds
					message "&cBoard of Health:&f Hmmm, what's this? A dirty tomato dicer?" to {_players::*}
					wait 2 seconds
					loop all blocks in radius 10 of {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
						loop-block is cauldron:
							set {_go} to location 2 meter above loop-block
							make spawned witch home towards {_go}
							exit loop
					wait 2 seconds
					message "&cBoard of Health:&f Oh my, when was the last time this sink has been cleaned?" to {_players::*}
					wait 2 seconds
					loop all blocks in radius 10 of {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
						loop-block is jukebox:
							set {_go} to location 2 meter above loop-block
							make spawned witch home towards {_go}
							exit loop
					wait 2 seconds
					message "&cBoard of Health:&f Are these mice droppings behind your cheese shredder?" to {_players::*}
					wait 2 seconds
					set {_go} to location 2 meter above location at {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}
					make spawned witch home towards {_go}
					wait 2 seconds
					message "&cBoard of Health:&f This is just deplorable. I'm going to have to cite you!" to {_players::*}
					wait 2 seconds
					message "&cBoard of Health:&f I'll take these with me!" to {_players::*}
					clear inventory of {taco.player.%{_world}%::%{_p.num}%}
					loop all entities in radius 15 around block at {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
						loop-entity is a villager:
							delete loop-entity
						loop-entity is a dropped item:
							delete loop-entity
						loop-entity is a witch:
							delete loop-entity

#Rancid Meat
every 5 seconds:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		loop {taco.player.%{_world}%::*}:
			set {_player} to loop-value-2
			{taco.game.status.%{_world}%} is true:
				{taco.timers.%{_player}%::rancid_meat} is set:
					set {_rancid.drop} to difference between {taco.timers.%{_player}%::rancid_meat} and now	
					{_rancid.drop} is greater than 30 seconds:
						remove 1 raw beef from {_player}
						drop 1 rancid meat named "Rancid Meat" at location of {_player}
						send "Ohhh, what stinks in here?" to {_player}
						clear {taco.timers.%{_player}%::rancid_meat}
				{taco.timers.%{_player}%::rancid_chicken} is set:
					set {_rancid.drop} to difference between {taco.timers.%{_player}%::rancid_chicken} and now	
					{_rancid.drop} is greater than 30 seconds:
						remove 1 raw chicken from {_player}
						drop 1 rancid meat named "Rancid Meat" at location of {_player}
						send "Ohhh, what stinks in here?" to {_player}
						clear {taco.timers.%{_player}%::rancid_chicken}
				{taco.timers.%{_player}%::rancid_fish} is set:
					set {_rancid.drop} to difference between {taco.timers.%{_player}%::rancid_fish} and now	
					{_rancid.drop} is greater than 30 seconds:
						remove 1 raw fish from {_player}
						drop 1 rancid meat named "Rancid Meat" at location of {_player}
						send "Ohhh, what stinks in here?" to {_player}
						clear {taco.timers.%{_player}%::rancid_fish}

#Start Game
every 6 seconds:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is not set:
			set {taco.game.status.%{_world}%} to false
		{taco.game.status.%{_world}%} is false:
			set {_count} to 0
			loop {taco.readycheck.%{_world}%::*}:
				set {_slot} to loop-index-2
				{_slot} is set:
					add 1 to {_count}
			{_count} is greater than 1:
				loop {taco.readycheck.%{_world}%::*}:
					set {_slot2} to loop-index-2
					set {taco.player.%{_world}%::%{_slot2}%} to loop-value-2
				send "Game starts in 5 seconds." to {taco.player.%{_world}%::*}
				wait 1 second
				send "4" to {taco.player.%{_world}%::*}
				wait 1 second
				send "3" to {taco.player.%{_world}%::*}
				wait 1 second
				send "2" to {taco.player.%{_world}%::*}
				wait 1 second
				send "1" to {taco.player.%{_world}%::*}
				wait 1 second
				send "It has begun!" to {taco.player.%{_world}%::*}
				set {taco.game.timer.%{_world}%} to now
				set {_vtime} to "%{taco.variables::game_minutes.time}% minutes" parsed as timespan
				add {_vtime} to {taco.game.timer.%{_world}%}
				set {taco.game.status.%{_world}%} to true
				loop {taco.player.%{_world}%::*}:
					set {_player} to loop-value-2
					clear inventory of {_player}
					clear {taco.timers.%{_player}%::*}
					set {taco.%{_player}%.score.%{_world}%} to 0
					set {taco.timers.%{_player}%::grain} to now
					set {taco.timers.%{_player}%::soft_shell} to now
					set {taco.timers.%{_player}%::hard_shell} to now	
					set {taco.timers.%{_player}%::whole_tomato} to now
					set {taco.timers.%{_player}%::diced_tomato} to now
					set {taco.timers.%{_player}%::block_of_cheese} to now
					set {taco.timers.%{_player}%::shredded_cheese} to now
					set {taco.timers.%{_player}%::raw_onion} to now
					set {taco.timers.%{_player}%::diced_onion} to now
					set {taco.timers.%{_player}%::head_of_lettuce} to now
					set {taco.timers.%{_player}%::shredded_lettuce} to now
					set {taco.timers.%{_player}%::raw_fish} to now
					set {taco.timers.%{_player}%::cooked_fish} to now
					set {taco.timers.%{_player}%::raw_chicken} to now
					set {taco.timers.%{_player}%::cooked_chicken} to now
					set {taco.timers.%{_player}%::raw_beef} to now
					set {taco.timers.%{_player}%::steak} to now
					set {taco.timers.%{_player}%::sheep} to now
				loop {taco.1.gate1.%{_world}%::*}:
					set {_change} to loop-value-2
					set block 2 meters above {_change} to air
				loop {taco.2.gate1.%{_world}%::*}:
					set {_change} to loop-value-2
					set block 2 meters above {_change} to air
				spawn sheep 2 meter above {keystone.%{_world}%}
				set name of spawned sheep to "&dPinky"
				clear {taco.readycheck.%{_world}%::*}
				
#Customer Spawning
every 10 seconds:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is true:
			loop {taco.player.%{_world}%::*}:
				send "Looping Players" to {debug.list::*}
				set {_p.num} to loop-index-2
				send "P-Num is %{_p.num}%" to {debug.list::*}
				wait 0.5 seconds
				set {_level} to level of {taco.player.%{_world}%::%{_p.num}%}
				loop {taco.p%{_p.num}%.spawns.%{_world}%::*}:
					send "Looping Player %{_p.num}% Spawn Points" to {debug.list::*}
					set {_spawned} to false
					set {_villager.check} to false
					set {_place} to loop-value-3
					set {_slot} to loop-index-3
					loop entities in radius 2 around block at {_place}:
						loop-entity is a villager:
							set {_villager.check} to true
					{_villager.check} is false:
						set {_spawned} to true
						set {_ran} to random integer between 1 and 30
						spawn villager 1 meter above {_place}
						set {_name} to {taco.villager.name::%{_ran}%}
						set name of spawned villager to "%{_name}%"
						set {taco.p%{_p.num}%.customer.%{_world}%::%{_slot}%} to "%{_name}%"
						set {_order} to random integer between 1 and 24
						set {_order2} to "receipt%{_order}%"
						set {taco.p%{_p.num}%.order.%{_world}%::%{_slot}%} to "%{_order2}%"
						send "&9%{_name}%:&f Hey buddy, can I get a  %{taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::1}% %{taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::2}% taco with %{taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::3}%, %{taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::4}% & %{taco.%{taco.p%{_p.num}%.order.%{_world}%::%{_slot}%}%::5}% please." to {taco.player.%{_world}%::%{_p.num}%}
						spawned villager is of type farmer:
							set {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%} to now
							set {_mult} to {taco.variables::farmer.time} * {taco.level::%{_level}%}
							set {_timeset} to "%{_mult}% seconds" parsed as timespan
							add {_timeset} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
						spawned villager is of type priest:
							set {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%} to now
							set {_mult} to {taco.variables::priest.time} * {taco.level::%{_level}%}
							set {_timeset} to "%{_mult}% seconds" parsed as timespan
							add {_timeset} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
						spawned villager is of type butcher:
							set {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%} to now
							set {_mult} to {taco.variables::butcher.time} * {taco.level::%{_level}%}
							set {_timeset} to "%{_mult}% seconds" parsed as timespan
							add {_timeset} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
						spawned villager is of type blacksmith:
							set {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%} to now
							set {_mult} to {taco.variables::blacksmith.time} * {taco.level::%{_level}%}
							set {_timeset} to "%{_mult}% seconds" parsed as timespan
							add {_timeset} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
						spawned villager is of type librarian:
							set {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%} to now
							set {_mult} to {taco.variables::librarian.time} * {taco.level::%{_level}%}
							set {_timeset} to "%{_mult}% seconds" parsed as timespan
							add {_timeset} to {taco.p%{_p.num}%.customer.timer.%{_world}%::%{_slot}%}
				
#Roach spawn
every 30 seconds:
	loop {taco.list.worlds::*}:
		set {_world} to loop-index-1
		{taco.game.status.%{_world}%} is true:
			loop {taco.player.%{_world}%::*}:
				set {_p.num} to loop-index-2
				set {_count} to 0
				loop all entities in radius 10 around block at {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}:
					loop-entity is a dropped item:
						add 1 to {_count}
						set {_meat.spawn::%{_count}%} to location of loop-entity
						delete loop-entity
					loop-entity is player:
						add loop-entity to {_players::*}
				loop {_meat.spawn::*}:
					set {_where} to loop-value-3
					drop rancid meat at {_where}
				loop {_count} times:
					spawn silverfish 2 meters above location of {taco.waypoint.%{_world}%::p%{_p.num}%kitchen}
					set name of spawned silverfish to "Roach"
				{_count} is 1:
					send "Oh nooooo, a roach!" to {_players::*}
				{_count} is greater than 1:
					send "Oh nooooo, %{_count}% roaches!" to {_players::*}
				clear {_players::*}
				clear {__meat.spawn::*}

#endfold periodic

#startfold commands

command /tacovariables [<text>] [<text>] [<text>]:
	aliases: tv
	permission: obam.admin
	trigger:
		argument 1 is not set:
			message "&cOptions are: list, add, change, delete"
			stop
		argument 1 is "help" or "h":
			message "&cOptions are: list, add, change, delete"
			stop
		argument 1 is "list" or "l":
			set {_index.count} to 0
			set {_count} to 0
			loop {taco.variables::*}:
				add 1 to {_index.count}
			set {_tpages} to round up ({_index.count} / 10)
			argument 2 is not set:
				set {_page} to 1
			{_page} is not set:
				set {_page} to argument 2 parsed as number
			{_page} is greater than {_tpages}:
				message "&cNot a valid page. There are currently &f%{_tpages}%&c available."
				stop
			set {_stop} to {_page} * 10
			set {_start} to {_stop} - 9
			message "&3Current Taco Timers &fPage %{_page}% / %{_tpages}%"
			loop {taco.variables::*}:
				add 1 to {_count}
				{_count} is {_start}:
					set {_report} to true
				{_report} is true:
					message "&f%{_count}% - &6%loop-index% &f- &6%loop-value%"
					{_count} is {_index.count}:
						message "&3End of List"
						stop
					{_count} is {_stop}:
						stop
		argument 1 is "add" or "a":
			argument 2 is not set:
				message "&cAdd what?"
				stop
			{taco.variables::%argument 2%} is set:
				message "&6%argument 2%&c is already set to &6%{taco.variables::%argument 2%}%&c. Try changing it."
				stop
			argument 3 is not set:
				message "&cAnd what is &6%argument 2%&c supposed to be set to?"
				stop
			set {taco.variables::%argument 2%} to argument 3
			message "&cYou have set &6%argument 2%&c to be set to &6%argument 3%&c?"
			stop
		argument 1 is "change" or "c":
			argument 2 is not set:
				message "&cChange what?"
				stop
			{taco.variables::%argument 2%} is not set:
				message "&6%argument 2%&c does not have a timer yet. Please set one first."
				stop
			argument 3 is not set:
				message "&cYou are changing &6%argument 2%&c from &6%{taco.variables::%argument 2%}%&c to what?"
				stop
			set {_old} to {taco.variables::%argument 2%}
			set {taco.variables::%argument 2%} to argument 3
			message "&cYou have changed &6%argument 2%&c from &6%{_old}%&c to &6%{taco.variables::%argument 2%}%&c."
			stop
		argument 1 is "delete" or "d":
			argument 2 is not set:
				message "&cDelete what?"
			{taco.variables::%argument 2%} is not set:
				message "&6%argument 2%&c does not exist. Please check your spelling and retry."
				stop
			delete {taco.variables::%argument 2%}
			message "&cYou have deleted &6%argument 2%&c."

#subfold Tacoset

command /tacoset:
	permission: obam.admin
	trigger:
		set {taco.villager.name::1} to "Bob"
		set {taco.villager.name::2} to "Shawna"
		set {taco.villager.name::3} to "Anakin"
		set {taco.villager.name::4} to "Aralynn"
		set {taco.villager.name::5} to "Dalton"
		set {taco.villager.name::6} to "Jeremy"
		set {taco.villager.name::7} to "Jack"
		set {taco.villager.name::8} to "Troy"
		set {taco.villager.name::9} to "Joe"
		set {taco.villager.name::10} to "Justin"
		set {taco.villager.name::11} to "Jim"
		set {taco.villager.name::12} to "Kelly"
		set {taco.villager.name::13} to "Katherine"
		set {taco.villager.name::14} to "Stevo"
		set {taco.villager.name::15} to "Cornelius"
		set {taco.villager.name::16} to "Patrick"
		set {taco.villager.name::17} to "Ian"
		set {taco.villager.name::18} to "Olivia"
		set {taco.villager.name::19} to "Donna"
		set {taco.villager.name::20} to "Jarod"
		set {taco.villager.name::21} to "Sue"
		set {taco.villager.name::22} to "Nick"
		set {taco.villager.name::23} to "Bill"
		set {taco.villager.name::24} to "Connie"
		set {taco.villager.name::25} to "Irene"
		set {taco.villager.name::26} to "Scott"
		set {taco.villager.name::27} to "Earl"
		set {taco.villager.name::28} to "Roy"
		set {taco.villager.name::29} to "Precious"
		set {taco.villager.name::30} to "Jenkins"
		set {taco.receipt1::1} to "Soft"
		set {taco.receipt1::2} to "Chicken"
		set {taco.receipt1::3} to "Cheese"
		set {taco.receipt1::4} to "Lettuce"
		set {taco.receipt1::5} to "Onion"
		set {taco.receipt1::6} to {@receipt1}
		set {taco.receipt2::1} to "Soft"
		set {taco.receipt2::2} to "Chicken"
		set {taco.receipt2::3} to "Cheese"
		set {taco.receipt2::4} to "Lettuce"
		set {taco.receipt2::5} to "Tomato"
		set {taco.receipt2::6} to {@receipt2}
		set {taco.receipt3::1} to "Soft"
		set {taco.receipt3::2} to "Chicken"
		set {taco.receipt3::3} to "Cheese"
		set {taco.receipt3::4} to "Onion"
		set {taco.receipt3::5} to "Tomato"
		set {taco.receipt3::6} to {@receipt3}
		set {taco.receipt4::1} to "Soft"
		set {taco.receipt4::2} to "Chicken"
		set {taco.receipt4::3} to "Lettuce"
		set {taco.receipt4::4} to "Onion"
		set {taco.receipt4::5} to "Tomato"
		set {taco.receipt4::6} to {@receipt4}
		set {taco.receipt5::1} to "Soft"
		set {taco.receipt5::2} to "Beef"
		set {taco.receipt5::3} to "Cheese"
		set {taco.receipt5::4} to "Lettuce"
		set {taco.receipt5::5} to "Onion"
		set {taco.receipt5::6} to {@receipt5}
		set {taco.receipt6::1} to "Soft"
		set {taco.receipt6::2} to "Beef"
		set {taco.receipt6::3} to "Cheese"
		set {taco.receipt6::4} to "Lettuce"
		set {taco.receipt6::5} to "Tomato"
		set {taco.receipt6::6} to {@receipt6}
		set {taco.receipt7::1} to "Soft"
		set {taco.receipt7::2} to "Beef"
		set {taco.receipt7::3} to "Cheese"
		set {taco.receipt7::4} to "Onion"
		set {taco.receipt7::5} to "Tomato"
		set {taco.receipt7::6} to {@receipt7}
		set {taco.receipt8::1} to "Soft"
		set {taco.receipt8::2} to "Beef"
		set {taco.receipt8::3} to "Lettuce"
		set {taco.receipt8::4} to "Onion"
		set {taco.receipt8::5} to "Tomato"
		set {taco.receipt8::6} to {@receipt8}
		set {taco.receipt9::1} to "Soft"
		set {taco.receipt9::2} to "Fish"
		set {taco.receipt9::3} to "Cheese"
		set {taco.receipt9::4} to "Lettuce"
		set {taco.receipt9::5} to "Onion"
		set {taco.receipt9::6} to {@receipt9}
		set {taco.receipt10::1} to "Soft"
		set {taco.receipt10::2} to "Fish"
		set {taco.receipt10::3} to "Cheese"
		set {taco.receipt10::4} to "Lettuce"
		set {taco.receipt10::5} to "Tomato"
		set {taco.receipt10::6} to {@receipt10}
		set {taco.receipt11::1} to "Soft"
		set {taco.receipt11::2} to "Fish"
		set {taco.receipt11::3} to "Cheese"
		set {taco.receipt11::4} to "Onion"
		set {taco.receipt11::5} to "Tomato"
		set {taco.receipt11::6} to {@receipt11}
		set {taco.receipt12::1} to "Soft"
		set {taco.receipt12::2} to "Fish"
		set {taco.receipt12::3} to "Lettuce"
		set {taco.receipt12::4} to "Onion"
		set {taco.receipt12::5} to "Tomato"
		set {taco.receipt12::6} to {@receipt12}
		set {taco.receipt13::1} to "Hard"
		set {taco.receipt13::2} to "Chicken"
		set {taco.receipt13::3} to "Cheese"
		set {taco.receipt13::4} to "Lettuce"
		set {taco.receipt13::5} to "Onion"
		set {taco.receipt13::6} to {@receipt13}
		set {taco.receipt14::1} to "Hard"
		set {taco.receipt14::2} to "Chicken"
		set {taco.receipt14::3} to "Cheese"
		set {taco.receipt14::4} to "Lettuce"
		set {taco.receipt14::5} to "Tomato"
		set {taco.receipt14::6} to {@receipt14}
		set {taco.receipt15::1} to "Hard"
		set {taco.receipt15::2} to "Chicken"
		set {taco.receipt15::3} to "Cheese"
		set {taco.receipt15::4} to "Onion"
		set {taco.receipt15::5} to "Tomato"
		set {taco.receipt15::6} to {@receipt15}
		set {taco.receipt16::1} to "Hard"
		set {taco.receipt16::2} to "Chicken"
		set {taco.receipt16::3} to "Lettuce"
		set {taco.receipt16::4} to "Onion"
		set {taco.receipt16::5} to "Tomato"
		set {taco.receipt16::6} to {@receipt16}
		set {taco.receipt17::1} to "Hard"
		set {taco.receipt17::2} to "Beef"
		set {taco.receipt17::3} to "Cheese"
		set {taco.receipt17::4} to "Lettuce"
		set {taco.receipt17::5} to "Onion"
		set {taco.receipt17::6} to {@receipt17}
		set {taco.receipt18::1} to "Hard"
		set {taco.receipt18::2} to "Beef"
		set {taco.receipt18::3} to "Cheese"
		set {taco.receipt18::4} to "Lettuce"
		set {taco.receipt18::5} to "Tomato"
		set {taco.receipt18::6} to {@receipt18}
		set {taco.receipt19::1} to "Hard"
		set {taco.receipt19::2} to "Beef"
		set {taco.receipt19::3} to "Cheese"
		set {taco.receipt19::4} to "Onion"
		set {taco.receipt19::5} to "Tomato"
		set {taco.receipt19::6} to {@receipt19}
		set {taco.receipt20::1} to "Hard"
		set {taco.receipt20::2} to "Beef"
		set {taco.receipt20::3} to "Lettuce"
		set {taco.receipt20::4} to "Onion"
		set {taco.receipt20::5} to "Tomato"
		set {taco.receipt20::6} to {@receipt20}
		set {taco.receipt21::1} to "Hard"
		set {taco.receipt21::2} to "Fish"
		set {taco.receipt21::3} to "Cheese"
		set {taco.receipt21::4} to "Lettuce"
		set {taco.receipt21::5} to "Onion"
		set {taco.receipt21::6} to {@receipt21}
		set {taco.receipt22::1} to "Hard"
		set {taco.receipt22::2} to "Fish"
		set {taco.receipt22::3} to "Cheese"
		set {taco.receipt22::4} to "Lettuce"
		set {taco.receipt22::5} to "Tomato"
		set {taco.receipt22::6} to {@receipt22}
		set {taco.receipt23::1} to "Hard"
		set {taco.receipt23::2} to "Fish"
		set {taco.receipt23::3} to "Cheese"
		set {taco.receipt23::4} to "Onion"
		set {taco.receipt23::5} to "Tomato"
		set {taco.receipt23::6} to {@receipt23}
		set {taco.receipt24::1} to "Hard"
		set {taco.receipt24::2} to "Fish"
		set {taco.receipt24::3} to "Lettuce"
		set {taco.receipt24::4} to "Onion"
		set {taco.receipt24::5} to "Tomato"
		set {taco.receipt24::6} to {@receipt24}
		set {taco.level::0} to 1
		set {taco.level::1} to 0.95
		set {taco.level::2} to 0.9
		set {taco.level::3} to 0.85
		set {taco.level::4} to 0.8
		set {taco.level::5} to 0.75
		set {taco.level::6} to 0.7
		set {taco.level::7} to 0.65
		set {taco.level::8} to 0.6
		set {taco.level::9} to 0.55
		set {taco.level::10} to 0.5
		set {taco.level::11} to 0.45
		set {taco.level::12} to 0.4
		set {taco.level::13} to 0.35
		set {taco.level::14} to 0.30
		set {taco.level::15} to 0.25
		set {taco.level::16} to 0.2
		set {taco.level::17} to 0.15
		set {taco.level::18} to 0.1
		set {taco.level::19} to 0.05
		set {taco.timeout::1} to "This is taking way to long. I'm out!"
		set {taco.timeout::2} to "I should have went to Taco Smell. Later!"
		set {taco.timeout::3} to "I've seen slimes move faster than that. Peace!"
		set {taco.timeout::4} to "What has two thumbs and is sick of waiting? This guy."
		set {taco.timeout::5} to "Oh, I guess I'm not as important as that guy. I'm not sticking around any longer."
		set {taco.timeout::6} to "What is this, Snail Cart?"
		set {taco.timeout::7} to "Roaches are one thing, but waiting this long? No thanks!"
		set {taco.timeout::8} to "God, it's worse than waiting for Half-Life 3! I'm outta here!"
		set {taco.timeout::9} to "Ummm, my work just called. Yeah that's it, work. Gotta run."
		set {taco.timeout::10} to "I guess the rumours were right. I'm not waiting this long again."
		set {taco.pinky::1} to "Where has that sheep ran off to this time?"
		set {taco.pinky::2} to "Pinky, oh Pinky! Dinner time."
		set {taco.pinky::3} to "Excuse me, have you seen my sheep around?"
		set {taco.pinky::4} to "When I find that sheep......"
		set {taco.pinky::5} to "Oh where is it? Pinky must have taken off with it again."
		set {taco.horsey::1} to "Dang kids, get off my horse!"
		set {taco.horsey::2} to "Mess with the horse and get the hoof, son!"
		set {taco.horsey::3} to "No"
		set {taco.horsey::4} to "Why don't you go fondle someone else's critters."
		set {taco.horsey::5} to "If you're gonna just stand around, might as well pick up a shovel. This ain't no pettin zoo."
		set {taco.correct::1} to "Wow, that tastes amazing!"
		set {taco.correct::2} to "Thanks buddy, that hit the spot!"
		set {taco.correct::3} to "Nom Nom Nom... Ohhhh God, that's good!"
		set {taco.correct::4} to "Yummy, I could eat three more of those!"
		set {taco.correct::5} to "Definitely liking this place on Fadbook!"
		set {taco.incorrect::1} to "That is not what I ordered. I am leaving!"
		set {taco.incorrect::2} to "Seriously, how hard is it to make a taco!"
		set {taco.incorrect::3} to "My blind Grandma makes me what I want, why can't you?"
		set {taco.incorrect::4} to "But... Wha...It's...I give up."
		set {taco.incorrect::5} to "Is this cat food or something?"
		set {taco.incorrect::6} to "Remember that time you got my order right? That was awesome!"
		set {taco.villager_hit::1} to "Hey, who threw that?"
		set {taco.villager_hit::2} to "Watch it, buddy!"
		set {taco.villager_hit::3} to "Really, are we in kindergarten?"
		set {taco.villager_hit::4} to "Stop it, that really hurts!"
		set {taco.villager_hit::5} to "Umphhh! Whaa, why is dog and bugs now then Frank?"
		message "All set"

command /setvariables:
	permission: obam.admin
	trigger:
		set {taco.variables::slow.time} to 3
		set {taco.variables::villager_hit.time} to 10
		set {taco.variables::soft_shell.amount} to 1
		set {taco.variables::soft_shell.time} to 10
		set {taco.variables::grain.amount} to 2
		set {taco.variables::grain.time} to 10
		set {taco.variables::hard_shell.amount} to 1
		set {taco.variables::hard_shell.time} to 10
		set {taco.variables::diced_tomato.amount} to 1
		set {taco.variables::diced_tomato.time} to 10
		set {taco.variables::block_of_cheese.amount} to 1
		set {taco.variables::block_of_cheese.time} to 10
		set {taco.variables::raw_onion.amount} to 1
		set {taco.variables::raw_onion.time} to 10
		set {taco.variables::steak.amount} to 1
		set {taco.variables::steak.time} to 10
		set {taco.variables::cooked_fish.amount} to 1
		set {taco.variables::cooked_fish.time} to 10
		set {taco.variables::cooked_chicken.amount} to 1
		set {taco.variables::cooked_chicken.time} to 10
		set {taco.variables::shredded_lettuce.amount} to 1
		set {taco.variables::shredded_lettuce.time} to 10
		set {taco.variables::diced_onion.amount} to 1
		set {taco.variables::diced_onion.time} to 10
		set {taco.variables::raw_chicken.amount} to 1
		set {taco.variables::raw_chicken.time} to 10
		set {taco.variables::raw_beef.amount} to 1
		set {taco.variables::raw_beef.time} to 10
		set {taco.variables::raw_fish.amount} to 1
		set {taco.variables::raw_fish.time} to 10
		set {taco.variables::head_of_lettuce.amount} to 1
		set {taco.variables::head_of_lettuce.time} to 10
		set {taco.variables::shredded_cheese.amount} to 1
		set {taco.variables::shredded_cheese.time} to 10
		set {taco.variables::whole_tomato.amount} to 1
		set {taco.variables::whole_tomato.time} to 10
		set {taco.variables::sheep.time} to 10
		set {taco.variables::game_minutes.time} to 10
		set {taco.variables::farmer.time} to 120
		set {taco.variables::priest.time} to 105
		set {taco.variables::butcher.time} to 90
		set {taco.variables::blacksmith.time} to 75
		set {taco.variables::librarian.time} to 60
		message "Set the things."

#subfold Keystone

command /keystone [<text>]:
	permission: obam.admin
	trigger:
		argument 1 is not set:
			message "Current Keystone World Types"
			message "Type        :        Command"
			message "----------------------"
			message "TacoCart    :           taco"
		argument 1 is "taco":
			"%player's world%" contains "Taco":
				delete {keystone.%world%}
				delete {taco.waypoint.%world%::*}
				delete {taco.p1.spawns.%world%::*}
				delete {taco.p1.spawns.%world%::*}
				delete {taco.p1.signs.%world%::*}
				delete {taco.p2.signs.%world%::*}
				loop blocks in radius 10 of player:
					loop-block is obsidian:
						set {keystone.%world%} to location of loop-block
						set {_loop1} to 1
						message "Keystone has been set to %{keystone.%world%}%"
						exit loop
				{_loop1} is not set:
					message "No Keystone was found"
					stop
				loop blocks in radius 10 of {keystone.%world%}:
					loop-block is cyan wool:
						set {taco.waypoint.%world%::p1c1} to location of loop-block
						set {taco.p1.spawns.%world%::1} to location of loop-block
						set {_loop2} to 1
						message "Player 1 Customer 1 set"
						exit loop
				{_loop2} is not set:
					message "Could not locate Player 1 Customer 1"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p1c1}:
					loop-block is white wool:
						set {taco.waypoint.%world%::p1c2} to location of loop-block
						set {taco.p1.spawns.%world%::2} to location of loop-block
						set {_loop3} to 1
						message "Player 1 Customer 2 set"
						exit loop
				{_loop3} is not set:
					message "Could not locate Player 1 Customer 2"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p1c2}:
					loop-block is red wool:
						set {taco.waypoint.%world%::p1c3} to location of loop-block
						set {taco.p1.spawns.%world%::3} to location of loop-block
						set {_loop4} to 1
						message "Player 1 Customer 3 set"
						exit loop
				{_loop4} is not set:
					message "Could not locate Player 1 Customer 3"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p1c2}:
					loop-block is quartz ore:
						set {taco.waypoint.%world%::p1kitchen} to location of loop-block
						set {_loop5} to 1
						message "Player 1 Kitchen set"
						exit loop
				{_loop5} is not set:
					message "Could not locate Player 1 Kitchen"
					stop
				loop blocks in radius 5 of {taco.waypoint.%world%::p1kitchen}:
					loop-block is workbench:
						set {taco.waypoint.%world%::p1bench} to location of loop-block
						set {_loop20} to 1
						message "Player 1 Bench set"
						exit loop
				{_loop20} is not set:
					message "Could not locate Player 1 Bench"
					stop
				loop blocks in radius 10 of {keystone.%world%}:
					loop-block is light green wool:
						set {taco.waypoint.%world%::p2c1} to location of loop-block
						set {taco.p2.spawns.%world%::1} to location of loop-block
						set {_loop6} to 1
						message "Player 2 Customer 1 set"
						exit loop
				{_loop6} is not set:
					message "Could not locate Player 2 Customer 1"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p2c1}:
					loop-block is black wool:
						set {taco.waypoint.%world%::p2c2} to location of loop-block
						set {taco.p2.spawns.%world%::2} to location of loop-block
						set {_loop7} to 1
						message "Player 2 Customer 2 set"
						exit loop
				{_loop7} is not set:
					message "Could not locate Player 2 Customer 2"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p2c2}:
					loop-block is orange wool:
						set {taco.waypoint.%world%::p2c3} to location of loop-block
						set {taco.p2.spawns.%world%::3} to location of loop-block
						set {_loop8} to 1
						message "Player 2 Customer 3 set"
						exit loop
				{_loop8} is not set:
					message "Could not locate Player 2 Customer 3"
					stop
				loop blocks in radius 10 of {taco.waypoint.%world%::p2c2}:
					loop-block is quartz ore:
						set {taco.waypoint.%world%::p2kitchen} to location of loop-block
						set {_loop9} to 1
						message "Player 2 Kitchen set"
						exit loop
				{_loop9} is not set:
					message "Could not locate Player 2 Kitchen"
					stop
				loop blocks in radius 5 of {taco.waypoint.%world%::p2kitchen}:
					loop-block is workbench:
						set {taco.waypoint.%world%::p2bench} to location of loop-block
						set {_loop21} to 1
						message "Player 2 Bench set"
						exit loop
				{_loop21} is not set:
					message "Could not locate Player 2 Bench"
					stop
				loop blocks in radius 5 of {taco.waypoint.%world%::p1bench}:
					loop-block is sign:
						set {taco.p1.signs.%world%::3} to location of loop-block
						message "%{taco.p1.signs.%world%::3}%"
						set {taco.p1.signs.%world%::2} to the location 2 meters south of loop-block
						message "%{taco.p1.signs.%world%::2}%"
						set {taco.p1.signs.%world%::1} to the location 4 meters south of loop-block
						message "%{taco.p1.signs.%world%::1}%"
						set {_loop10} to 1
						message "Player 1 Signs set"
						exit loop
				{_loop10} is not set:
					message "Could not locate Player 1 Signs"
					stop
				loop blocks in radius 7 of {taco.waypoint.%world%::p2bench}:
					loop-block is sign:
						set {taco.p2.signs.%world%::1} to location of loop-block
						message "%{taco.p2.signs.%world%::1}%"
						set {taco.p2.signs.%world%::2} to the location 2 meters south of loop-block
						message "%{taco.p2.signs.%world%::2}%"
						set {taco.p2.signs.%world%::3} to the location 4 meters south of loop-block
						message "%{taco.p2.signs.%world%::3}%"
						set {_loop11} to 1
						message "Player 2 Signs set"
						exit loop
				{_loop11} is not set:
					message "Could not locate Player 2 Signs"
					stop
				loop blocks in radius 10 of {keystone.%world%}:
					loop-block is melon:
						set {taco.waypoint.%world%::p1j1} to location of loop-block
						set {_loop12} to 1
						message "Player 1 Jumper 1 set"
						exit loop
				{_loop12} is not set:
					message "Could not locate Player 1 Jumper 1"
					stop
				loop blocks in radius 8 of {taco.waypoint.%world%::p1j1}:
					loop-block is sign:
						set {taco.start.%world%::1} to location of loop-block
						set {_loop13} to 1
						message "%{taco.start.%world%::1}%"
						message "Player 1 Start Sign set"
						exit loop
				{_loop13} is not set:
					message "Could not locate Player 1 Start Sign"
					stop
				set {_count} to 0
				loop blocks in radius 8 of {taco.waypoint.%world%::p1j1}:
					loop-block is emerald block:
						set {taco.1.gate1.%world%::%{_count}%} to location of loop-block
						add 1 to {_count}
						message "Player 1 Gate 1 Block %{_count}% set"
						{_count} is 3:
							set {_loop14} to 1
							exit loop
				{_loop14} is not set:
					message "Could not locate Player 1 Gate 1"
					stop
				set {_count} to 0
				loop blocks in radius 8 of {taco.waypoint.%world%::p1j1}:
					loop-block is emerald ore:
						set {taco.1.gate2.%world%::%{_count}%} to location of loop-block
						add 1 to {_count}
						message "Player 1 Gate 2 Block %{_count}% set"
						{_count} is 3:
							set {_loop15} to 1
							exit loop
				{_loop15} is not set:
					message "Could not locate Player 1 Gate 2"
					stop
				loop blocks in radius 10 of {keystone.%world%}:
					loop-block is pumpkin:
						set {taco.waypoint.%world%::p2j1} to location of loop-block
						set {_loop16} to 1
						message "Player 2 Jumper 1 set"
						exit loop
				{_loop16} is not set:
					message "Could not locate Player 2 Jumper 1"
					stop
				loop blocks in radius 8 of {taco.waypoint.%world%::p2j1}:
					loop-block is sign:
						set {taco.start.%world%::2} to location of loop-block
						set {_loop16} to 1
						message "%{taco.start.%world%::2}%"
						message "Player 2 Start Sign set"
						exit loop
				{_loop16} is not set:
					message "Could not locate Player 2 Start Sign"
					stop
				set {_count} to 0
				loop blocks in radius 8 of {taco.waypoint.%world%::p2j1}:
					loop-block is diamond block:
						set {taco.2.gate1.%world%::%{_count}%} to location of loop-block
						add 1 to {_count}
						message "Player 2 Gate 1 Block %{_count}% set"
						{_count} is 3:
							set {_loop17} to 1
							exit loop
				{_loop17} is not set:
					message "Could not locate Player 2 Gate 1"
					stop
				set {_count} to 0
				loop blocks in radius 8 of {taco.waypoint.%world%::p2j1}:
					loop-block is diamond ore:
						set {taco.2.gate2.%world%::%{_count}%} to location of loop-block
						add 1 to {_count}
						message "Player 2 Gate 2 Block %{_count}% set"
						{_count} is 3:
							set {_loop18} to 1
							exit loop
				{_loop18} is not set:
					message "Could not locate Player 2 Gate 2"
					stop
				{_loop18} is set:
					message "&3All Good!"
					stop
			message "You are not in the correct world for this Keystone command."

command /tacoworld [<text>]:
	permission: obam.admin
	trigger:
		argument 1 is "list" or "l":
			loop {taco.list.worlds::*}:
				message "%loop-index% --- %loop-value%"
			stop
		argument 1 is "delete" or "d":
			delete {taco.list.worlds::*}
			message "Deleted"
			stop
		set {_world} to argument 1
		set {taco.list.worlds::%{_world}%} to "available"
		message "Added %{_world}% to list."

command /debuglist [<text>]:
	trigger:
		argument 1 is "list" or "l":
			loop {debug.list::*}:
				message "%loop-index%"
			stop
		argument 1 is "delete" or "d":
			delete {debug.list::*}
			message "Deleted"
			stop
		set {_who} to argument 1 parsed as a player
		set {debug.list::%{_who}%} to {_who}
		message "Added %{_who}% to list."

#endfold

#startfold testing


#Remove when live
command /killvill:
	trigger:
		"%player's world%" contains "Taco":
			loop villagers in radius 3 of player:
				delete loop-villager
			loop entities in radius 10 of player:
				loop-entity is a witch:
					delete loop-entity
#Remove when live
command /looptest:
	trigger:
		loop blocks in radius 2 of {taco.waypoint.%world%::p1kitchen}:
			message " Var Block %loop-block%"
		loop dropped items in radius 4 of player:
			message "Item %loop-dropped item%"
		loop entities in radius 4 of player:
			message "Entity %loop-entity%"
		loop dropped items in radius 4 of {taco.waypoint.%world%::p1kitchen}:
			message "Var Item %loop-dropped item%"
		loop entities in radius 4 of {taco.waypoint.%world%::p1kitchen}:
			message "Var Entity %loop-entity%"
		loop dropped items in radius 4 around block at {taco.waypoint.%world%::p1kitchen}:
			message "Fix Item %loop-dropped item%"
		loop entities in radius 4 around block at {taco.waypoint.%world%::p1kitchen}:
			message "Fix Entity %loop-entity%"
		message "%{taco.waypoint.%world%::p1kitchen}%"
#Remove when live
command /flesh:
	trigger:
		loop all dropped items in world:
			delete loop-dropped item

command /players:
	trigger:
		clear {taco.player.%world%::*}
		set {_players} to 1
		loop all players in player's world:
			{_players} is 3:
				exit loop
			set {taco.player.%world%::%{_players}%} to loop-player
			message "You are Player %{_players}%" to loop-player
			add 1 to {_players}

command /scoreadd:
	trigger:
		add 1 to {taco.%player%.score.%world%}
		message "%{taco.%player%.score.%world%}%"

command /scoreclear:
	trigger:
		set {taco.%player%.score.%world%} to 0
		message "%{taco.%player%.score.%world%}%"
		
command /boardbegone:
	trigger:
		display board named "" to player

command /endgame:
	trigger:
		subtract 10 minutes from {taco.game.timer.%world%}
		message "Game time altered."

command /gameinfo:
	trigger:
		message "Players are %{taco.player.%world%::*}%"
		message "Time is %{taco.game.timer.%world%}%"
		message "Status is %{taco.game.status.%world%}%"

command /tester:
	trigger:
		set {_player} to player
		set {taco.timers.%{_player}%::grain} to now
		set {taco.timers.%{_player}%::soft_shell} to now
		set {taco.timers.%{_player}%::hard_shell} to now	
		set {taco.timers.%{_player}%::whole_tomato} to now
		set {taco.timers.%{_player}%::diced_tomato} to now
		set {taco.timers.%{_player}%::block_of_cheese} to now
		set {taco.timers.%{_player}%::shredded_cheese} to now
		set {taco.timers.%{_player}%::raw_onion} to now
		set {taco.timers.%{_player}%::diced_onion} to now
		set {taco.timers.%{_player}%::head_of_lettuce} to now
		set {taco.timers.%{_player}%::shredded_lettuce} to now
		set {taco.timers.%{_player}%::raw_fish} to now
		set {taco.timers.%{_player}%::cooked_fish} to now
		set {taco.timers.%{_player}%::raw_chicken} to now
		set {taco.timers.%{_player}%::cooked_chicken} to now
		set {taco.timers.%{_player}%::raw_beef} to now
		set {taco.timers.%{_player}%::steak} to now
		set {taco.timers.%{_player}%::sheep} to now
		message "%{taco.timers.%{_player}%::*}%"

#endfold


on join:

	teleport player to {spawn.taco}
	
	
command /tacospawn:
	permission: obam.admin
	trigger:
	
		set {spawn.taco} to location of player
		send "&aSpawn set to &e%player's location%"
		
